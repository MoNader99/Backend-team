function cov_tb3dtfwnu(){var path="C:\\Users\\Dell\\Desktop\\new\\Controllers\\UserController.js";var hash="d6b3ac386383267989b00bb677983745321acd2e";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\Users\\Dell\\Desktop\\new\\Controllers\\UserController.js",statementMap:{"0":{start:{line:1,column:0},end:{line:1,column:33}},"1":{start:{line:4,column:19},end:{line:4,column:49}},"2":{start:{line:5,column:17},end:{line:5,column:38}},"3":{start:{line:6,column:15},end:{line:6,column:46}},"4":{start:{line:7,column:13},end:{line:7,column:46}},"5":{start:{line:9,column:17},end:{line:9,column:35}},"6":{start:{line:11,column:16},end:{line:11,column:34}},"7":{start:{line:12,column:15},end:{line:12,column:31}},"8":{start:{line:14,column:15},end:{line:14,column:32}},"9":{start:{line:15,column:15},end:{line:15,column:20}},"10":{start:{line:18,column:8},end:{line:18,column:25}},"11":{start:{line:20,column:12},end:{line:20,column:35}},"12":{start:{line:24,column:18},end:{line:24,column:70}},"13":{start:{line:25,column:11},end:{line:25,column:67}},"14":{start:{line:26,column:22},end:{line:26,column:79}},"15":{start:{line:27,column:20},end:{line:27,column:76}},"16":{start:{line:32,column:0},end:{line:32,column:107}},"17":{start:{line:34,column:20},end:{line:40,column:2}},"18":{start:{line:70,column:0},end:{line:143,column:3}},"19":{start:{line:71,column:4},end:{line:142,column:5}},"20":{start:{line:72,column:21},end:{line:72,column:43}},"21":{start:{line:73,column:27},end:{line:73,column:69}},"22":{start:{line:82,column:8},end:{line:85,column:9}},"23":{start:{line:84,column:10},end:{line:84,column:67}},"24":{start:{line:88,column:21},end:{line:97,column:14}},"25":{start:{line:99,column:8},end:{line:135,column:14}},"26":{start:{line:104,column:14},end:{line:104,column:20}},"27":{start:{line:105,column:13},end:{line:105,column:101}},"28":{start:{line:108,column:11},end:{line:108,column:26}},"29":{start:{line:109,column:11},end:{line:109,column:59}},"30":{start:{line:110,column:2},end:{line:110,column:20}},"31":{start:{line:111,column:18},end:{line:115,column:4}},"32":{start:{line:117,column:2},end:{line:126,column:3}},"33":{start:{line:118,column:3},end:{line:124,column:5}},"34":{start:{line:119,column:4},end:{line:119,column:23}},"35":{start:{line:120,column:3},end:{line:120,column:20}},"36":{start:{line:123,column:3},end:{line:123,column:19}},"37":{start:{line:129,column:12},end:{line:129,column:105}},"38":{start:{line:132,column:16},end:{line:132,column:33}},"39":{start:{line:133,column:16},end:{line:133,column:78}},"40":{start:{line:141,column:8},end:{line:141,column:31}},"41":{start:{line:165,column:0},end:{line:176,column:2}},"42":{start:{line:166,column:3},end:{line:175,column:6}},"43":{start:{line:167,column:8},end:{line:170,column:9}},"44":{start:{line:168,column:3},end:{line:168,column:42}},"45":{start:{line:169,column:12},end:{line:169,column:36}},"46":{start:{line:172,column:2},end:{line:172,column:56}},"47":{start:{line:174,column:8},end:{line:174,column:47}},"48":{start:{line:180,column:0},end:{line:206,column:3}},"49":{start:{line:181,column:4},end:{line:181,column:19}},"50":{start:{line:182,column:15},end:{line:182,column:54}},"51":{start:{line:183,column:4},end:{line:183,column:19}},"52":{start:{line:184,column:4},end:{line:201,column:7}},"53":{start:{line:185,column:8},end:{line:185,column:23}},"54":{start:{line:186,column:2},end:{line:197,column:3}},"55":{start:{line:188,column:3},end:{line:192,column:6}},"56":{start:{line:189,column:12},end:{line:189,column:27}},"57":{start:{line:190,column:12},end:{line:190,column:47}},"58":{start:{line:191,column:6},end:{line:191,column:21}},"59":{start:{line:196,column:3},end:{line:196,column:94}},"60":{start:{line:199,column:8},end:{line:199,column:23}},"61":{start:{line:200,column:8},end:{line:200,column:70}},"62":{start:{line:209,column:0},end:{line:223,column:2}},"63":{start:{line:210,column:16},end:{line:210,column:36}},"64":{start:{line:211,column:4},end:{line:214,column:5}},"65":{start:{line:213,column:8},end:{line:213,column:78}},"66":{start:{line:215,column:4},end:{line:222,column:6}},"67":{start:{line:216,column:8},end:{line:218,column:9}},"68":{start:{line:217,column:12},end:{line:217,column:35}},"69":{start:{line:219,column:8},end:{line:219,column:35}},"70":{start:{line:221,column:8},end:{line:221,column:31}},"71":{start:{line:263,column:0},end:{line:308,column:3}},"72":{start:{line:265,column:17},end:{line:265,column:31}},"73":{start:{line:267,column:4},end:{line:307,column:5}},"74":{start:{line:269,column:5},end:{line:301,column:8}},"75":{start:{line:271,column:11},end:{line:274,column:72}},"76":{start:{line:274,column:12},end:{line:274,column:71}},"77":{start:{line:277,column:13},end:{line:277,column:51}},"78":{start:{line:278,column:4},end:{line:300,column:6}},"79":{start:{line:280,column:13},end:{line:280,column:28}},"80":{start:{line:281,column:13},end:{line:281,column:68}},"81":{start:{line:282,column:20},end:{line:286,column:9}},"82":{start:{line:289,column:4},end:{line:299,column:10}},"83":{start:{line:290,column:5},end:{line:297,column:10}},"84":{start:{line:291,column:12},end:{line:291,column:31}},"85":{start:{line:292,column:8},end:{line:292,column:60}},"86":{start:{line:294,column:12},end:{line:294,column:61}},"87":{start:{line:296,column:8},end:{line:296,column:56}},"88":{start:{line:306,column:8},end:{line:306,column:60}},"89":{start:{line:335,column:0},end:{line:356,column:6}},"90":{start:{line:337,column:20},end:{line:337,column:40}},"91":{start:{line:340,column:14},end:{line:340,column:29}},"92":{start:{line:342,column:17},end:{line:342,column:39}},"93":{start:{line:343,column:23},end:{line:343,column:59}},"94":{start:{line:345,column:4},end:{line:354,column:71}},"95":{start:{line:347,column:7},end:{line:347,column:32}},"96":{start:{line:348,column:7},end:{line:348,column:33}},"97":{start:{line:349,column:7},end:{line:349,column:19}},"98":{start:{line:351,column:7},end:{line:351,column:68}},"99":{start:{line:354,column:20},end:{line:354,column:69}},"100":{start:{line:393,column:0},end:{line:424,column:3}},"101":{start:{line:395,column:11},end:{line:395,column:24}},"102":{start:{line:397,column:16},end:{line:397,column:36}},"103":{start:{line:398,column:4},end:{line:422,column:81}},"104":{start:{line:399,column:4},end:{line:401,column:5}},"105":{start:{line:400,column:8},end:{line:400,column:32}},"106":{start:{line:402,column:2},end:{line:402,column:18}},"107":{start:{line:404,column:2},end:{line:420,column:1}},"108":{start:{line:406,column:6},end:{line:406,column:70}},"109":{start:{line:408,column:7},end:{line:420,column:1}},"110":{start:{line:410,column:4},end:{line:410,column:104}},"111":{start:{line:415,column:4},end:{line:415,column:25}},"112":{start:{line:416,column:4},end:{line:416,column:16}},"113":{start:{line:417,column:4},end:{line:417,column:88}},"114":{start:{line:422,column:15},end:{line:422,column:79}},"115":{start:{line:474,column:0},end:{line:530,column:6}},"116":{start:{line:477,column:20},end:{line:477,column:33}},"117":{start:{line:479,column:23},end:{line:479,column:43}},"118":{start:{line:480,column:13},end:{line:529,column:89}},"119":{start:{line:482,column:16},end:{line:484,column:17}},"120":{start:{line:483,column:20},end:{line:483,column:44}},"121":{start:{line:485,column:14},end:{line:485,column:30}},"122":{start:{line:487,column:14},end:{line:526,column:13}},"123":{start:{line:489,column:18},end:{line:489,column:82}},"124":{start:{line:491,column:19},end:{line:526,column:13}},"125":{start:{line:493,column:16},end:{line:493,column:107}},"126":{start:{line:498,column:27},end:{line:498,column:37}},"127":{start:{line:499,column:26},end:{line:499,column:35}},"128":{start:{line:500,column:27},end:{line:500,column:97}},"129":{start:{line:501,column:16},end:{line:501,column:34}},"130":{start:{line:503,column:25},end:{line:503,column:40}},"131":{start:{line:504,column:25},end:{line:504,column:88}},"132":{start:{line:506,column:32},end:{line:510,column:21}},"133":{start:{line:512,column:16},end:{line:525,column:25}},"134":{start:{line:513,column:17},end:{line:523,column:17}},"135":{start:{line:515,column:24},end:{line:515,column:43}},"136":{start:{line:516,column:20},end:{line:516,column:77}},"137":{start:{line:521,column:24},end:{line:521,column:73}},"138":{start:{line:522,column:20},end:{line:522,column:124}},"139":{start:{line:529,column:23},end:{line:529,column:87}},"140":{start:{line:580,column:0},end:{line:606,column:3}},"141":{start:{line:581,column:15},end:{line:581,column:30}},"142":{start:{line:582,column:0},end:{line:604,column:1}},"143":{start:{line:583,column:4},end:{line:583,column:53}},"144":{start:{line:585,column:4},end:{line:599,column:1}},"145":{start:{line:586,column:6},end:{line:598,column:6}},"146":{start:{line:587,column:8},end:{line:590,column:9}},"147":{start:{line:588,column:3},end:{line:588,column:56}},"148":{start:{line:592,column:8},end:{line:592,column:28}},"149":{start:{line:593,column:8},end:{line:593,column:19}},"150":{start:{line:594,column:8},end:{line:594,column:98}},"151":{start:{line:596,column:7},end:{line:596,column:72}},"152":{start:{line:602,column:4},end:{line:602,column:79}},"153":{start:{line:612,column:0},end:{line:654,column:3}},"154":{start:{line:613,column:16},end:{line:613,column:36}},"155":{start:{line:614,column:4},end:{line:653,column:4}},"156":{start:{line:615,column:8},end:{line:617,column:9}},"157":{start:{line:616,column:12},end:{line:616,column:36}},"158":{start:{line:619,column:15},end:{line:619,column:32}},"159":{start:{line:620,column:4},end:{line:622,column:5}},"160":{start:{line:621,column:8},end:{line:621,column:58}},"161":{start:{line:623,column:4},end:{line:625,column:5}},"162":{start:{line:624,column:8},end:{line:624,column:50}},"163":{start:{line:626,column:4},end:{line:650,column:6}},"164":{start:{line:627,column:8},end:{line:629,column:9}},"165":{start:{line:628,column:12},end:{line:628,column:56}},"166":{start:{line:631,column:8},end:{line:645,column:10}},"167":{start:{line:632,column:8},end:{line:641,column:9}},"168":{start:{line:632,column:22},end:{line:632,column:23}},"169":{start:{line:634,column:12},end:{line:640,column:13}},"170":{start:{line:635,column:30},end:{line:635,column:53}},"171":{start:{line:636,column:16},end:{line:636,column:86}},"172":{start:{line:637,column:16},end:{line:637,column:72}},"173":{start:{line:638,column:16},end:{line:638,column:39}},"174":{start:{line:639,column:16},end:{line:639,column:22}},"175":{start:{line:642,column:8},end:{line:642,column:47}},"176":{start:{line:644,column:12},end:{line:644,column:58}},"177":{start:{line:649,column:8},end:{line:649,column:54}},"178":{start:{line:652,column:4},end:{line:652,column:48}},"179":{start:{line:663,column:0},end:{line:766,column:3}},"180":{start:{line:664,column:12},end:{line:664,column:32}},"181":{start:{line:665,column:2},end:{line:764,column:1}},"182":{start:{line:667,column:4},end:{line:667,column:82}},"183":{start:{line:670,column:0},end:{line:764,column:1}},"184":{start:{line:671,column:4},end:{line:671,column:53}},"185":{start:{line:673,column:5},end:{line:757,column:6}},"186":{start:{line:674,column:8},end:{line:677,column:9}},"187":{start:{line:676,column:3},end:{line:676,column:56}},"188":{start:{line:678,column:2},end:{line:692,column:7}},"189":{start:{line:680,column:20},end:{line:680,column:50}},"190":{start:{line:682,column:4},end:{line:690,column:5}},"191":{start:{line:684,column:23},end:{line:684,column:42}},"192":{start:{line:688,column:5},end:{line:688,column:72}},"193":{start:{line:693,column:3},end:{line:752,column:4}},"194":{start:{line:695,column:4},end:{line:751,column:6}},"195":{start:{line:696,column:3},end:{line:749,column:2}},"196":{start:{line:699,column:4},end:{line:699,column:58}},"197":{start:{line:705,column:8},end:{line:746,column:3}},"198":{start:{line:707,column:3},end:{line:712,column:4}},"199":{start:{line:710,column:4},end:{line:710,column:36}},"200":{start:{line:713,column:3},end:{line:724,column:4}},"201":{start:{line:716,column:4},end:{line:720,column:5}},"202":{start:{line:719,column:5},end:{line:719,column:62}},"203":{start:{line:723,column:4},end:{line:723,column:33}},"204":{start:{line:725,column:3},end:{line:730,column:4}},"205":{start:{line:728,column:5},end:{line:728,column:31}},"206":{start:{line:732,column:4},end:{line:734,column:7}},"207":{start:{line:733,column:8},end:{line:733,column:53}},"208":{start:{line:733,column:17},end:{line:733,column:53}},"209":{start:{line:744,column:3},end:{line:744,column:34}},"210":{start:{line:748,column:8},end:{line:748,column:47}},"211":{start:{line:755,column:8},end:{line:755,column:61}},"212":{start:{line:762,column:4},end:{line:762,column:86}},"213":{start:{line:773,column:1},end:{line:809,column:3}},"214":{start:{line:774,column:20},end:{line:774,column:40}},"215":{start:{line:775,column:20},end:{line:775,column:40}},"216":{start:{line:776,column:14},end:{line:776,column:34}},"217":{start:{line:777,column:4},end:{line:780,column:5}},"218":{start:{line:779,column:8},end:{line:779,column:56}},"219":{start:{line:781,column:4},end:{line:808,column:16}},"220":{start:{line:782,column:8},end:{line:785,column:9}},"221":{start:{line:784,column:12},end:{line:784,column:35}},"222":{start:{line:786,column:4},end:{line:786,column:35}},"223":{start:{line:787,column:15},end:{line:787,column:16}},"224":{start:{line:788,column:4},end:{line:807,column:23}},"225":{start:{line:789,column:8},end:{line:807,column:9}},"226":{start:{line:790,column:12},end:{line:790,column:76}},"227":{start:{line:791,column:12},end:{line:791,column:48}},"228":{start:{line:792,column:29},end:{line:792,column:51}},"229":{start:{line:793,column:35},end:{line:793,column:71}},"230":{start:{line:794,column:16},end:{line:794,column:40}},"231":{start:{line:795,column:16},end:{line:795,column:41}},"232":{start:{line:796,column:16},end:{line:796,column:28}},"233":{start:{line:797,column:16},end:{line:797,column:43}},"234":{start:{line:798,column:16},end:{line:798,column:25}},"235":{start:{line:799,column:16},end:{line:799,column:77}},"236":{start:{line:802,column:12},end:{line:802,column:39}},"237":{start:{line:803,column:12},end:{line:803,column:37}},"238":{start:{line:804,column:12},end:{line:804,column:53}},"239":{start:{line:805,column:12},end:{line:805,column:20}},"240":{start:{line:806,column:12},end:{line:806,column:69}},"241":{start:{line:821,column:1},end:{line:821,column:26}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:70,column:29},end:{line:70,column:30}},loc:{start:{line:70,column:49},end:{line:143,column:1}},line:70},"1":{name:"(anonymous_1)",decl:{start:{line:99,column:27},end:{line:99,column:28}},loc:{start:{line:99,column:36},end:{line:130,column:9}},line:99},"2":{name:"(anonymous_2)",decl:{start:{line:117,column:38},end:{line:117,column:39}},loc:{start:{line:117,column:63},end:{line:126,column:1}},line:117},"3":{name:"(anonymous_3)",decl:{start:{line:131,column:12},end:{line:131,column:13}},loc:{start:{line:131,column:21},end:{line:135,column:13}},line:131},"4":{name:"(anonymous_4)",decl:{start:{line:165,column:34},end:{line:165,column:35}},loc:{start:{line:165,column:47},end:{line:176,column:1}},line:165},"5":{name:"(anonymous_5)",decl:{start:{line:166,column:46},end:{line:166,column:47}},loc:{start:{line:166,column:56},end:{line:173,column:5}},line:166},"6":{name:"(anonymous_6)",decl:{start:{line:173,column:13},end:{line:173,column:14}},loc:{start:{line:173,column:20},end:{line:175,column:5}},line:173},"7":{name:"(anonymous_7)",decl:{start:{line:180,column:28},end:{line:180,column:29}},loc:{start:{line:180,column:48},end:{line:206,column:1}},line:180},"8":{name:"(anonymous_8)",decl:{start:{line:184,column:59},end:{line:184,column:60}},loc:{start:{line:184,column:69},end:{line:198,column:5}},line:184},"9":{name:"(anonymous_9)",decl:{start:{line:188,column:40},end:{line:188,column:41}},loc:{start:{line:188,column:51},end:{line:192,column:4}},line:188},"10":{name:"(anonymous_10)",decl:{start:{line:198,column:13},end:{line:198,column:14}},loc:{start:{line:198,column:20},end:{line:201,column:5}},line:198},"11":{name:"(anonymous_11)",decl:{start:{line:209,column:23},end:{line:209,column:24}},loc:{start:{line:209,column:36},end:{line:223,column:1}},line:209},"12":{name:"(anonymous_12)",decl:{start:{line:215,column:33},end:{line:215,column:34}},loc:{start:{line:215,column:43},end:{line:220,column:5}},line:215},"13":{name:"(anonymous_13)",decl:{start:{line:220,column:13},end:{line:220,column:14}},loc:{start:{line:220,column:20},end:{line:222,column:5}},line:220},"14":{name:"(anonymous_14)",decl:{start:{line:263,column:29},end:{line:263,column:30}},loc:{start:{line:263,column:49},end:{line:308,column:1}},line:263},"15":{name:"(anonymous_15)",decl:{start:{line:269,column:43},end:{line:269,column:44}},loc:{start:{line:269,column:51},end:{line:301,column:6}},line:269},"16":{name:"(anonymous_16)",decl:{start:{line:278,column:35},end:{line:278,column:36}},loc:{start:{line:278,column:44},end:{line:300,column:5}},line:278},"17":{name:"(anonymous_17)",decl:{start:{line:289,column:40},end:{line:289,column:41}},loc:{start:{line:289,column:65},end:{line:299,column:9}},line:289},"18":{name:"(anonymous_18)",decl:{start:{line:335,column:28},end:{line:335,column:29}},loc:{start:{line:335,column:45},end:{line:356,column:5}},line:335},"19":{name:"(anonymous_19)",decl:{start:{line:345,column:45},end:{line:345,column:46}},loc:{start:{line:345,column:53},end:{line:354,column:5}},line:345},"20":{name:"(anonymous_20)",decl:{start:{line:354,column:13},end:{line:354,column:14}},loc:{start:{line:354,column:19},end:{line:354,column:70}},line:354},"21":{name:"(anonymous_21)",decl:{start:{line:393,column:35},end:{line:393,column:36}},loc:{start:{line:393,column:55},end:{line:424,column:1}},line:393},"22":{name:"(anonymous_22)",decl:{start:{line:398,column:33},end:{line:398,column:34}},loc:{start:{line:398,column:43},end:{line:422,column:1}},line:398},"23":{name:"(anonymous_23)",decl:{start:{line:422,column:9},end:{line:422,column:10}},loc:{start:{line:422,column:14},end:{line:422,column:80}},line:422},"24":{name:"(anonymous_24)",decl:{start:{line:474,column:33},end:{line:474,column:34}},loc:{start:{line:475,column:0},end:{line:530,column:5}},line:475},"25":{name:"(anonymous_25)",decl:{start:{line:480,column:42},end:{line:480,column:43}},loc:{start:{line:481,column:13},end:{line:529,column:9}},line:481},"26":{name:"(anonymous_26)",decl:{start:{line:512,column:52},end:{line:512,column:53}},loc:{start:{line:512,column:77},end:{line:525,column:23}},line:512},"27":{name:"(anonymous_27)",decl:{start:{line:529,column:17},end:{line:529,column:18}},loc:{start:{line:529,column:22},end:{line:529,column:88}},line:529},"28":{name:"(anonymous_28)",decl:{start:{line:580,column:38},end:{line:580,column:39}},loc:{start:{line:580,column:55},end:{line:606,column:2}},line:580},"29":{name:"(anonymous_29)",decl:{start:{line:586,column:38},end:{line:586,column:39}},loc:{start:{line:586,column:46},end:{line:595,column:5}},line:586},"30":{name:"(anonymous_30)",decl:{start:{line:595,column:13},end:{line:595,column:14}},loc:{start:{line:595,column:20},end:{line:598,column:5}},line:595},"31":{name:"(anonymous_31)",decl:{start:{line:612,column:36},end:{line:612,column:37}},loc:{start:{line:612,column:47},end:{line:654,column:1}},line:612},"32":{name:"(anonymous_32)",decl:{start:{line:614,column:33},end:{line:614,column:34}},loc:{start:{line:614,column:41},end:{line:651,column:3}},line:614},"33":{name:"(anonymous_33)",decl:{start:{line:626,column:33},end:{line:626,column:34}},loc:{start:{line:626,column:46},end:{line:647,column:5}},line:626},"34":{name:"(anonymous_34)",decl:{start:{line:631,column:58},end:{line:631,column:59}},loc:{start:{line:631,column:78},end:{line:643,column:9}},line:631},"35":{name:"(anonymous_35)",decl:{start:{line:643,column:10},end:{line:643,column:11}},loc:{start:{line:643,column:15},end:{line:645,column:9}},line:643},"36":{name:"(anonymous_36)",decl:{start:{line:647,column:6},end:{line:647,column:7}},loc:{start:{line:647,column:11},end:{line:650,column:5}},line:647},"37":{name:"(anonymous_37)",decl:{start:{line:651,column:11},end:{line:651,column:12}},loc:{start:{line:651,column:16},end:{line:653,column:3}},line:651},"38":{name:"(anonymous_38)",decl:{start:{line:663,column:37},end:{line:663,column:38}},loc:{start:{line:663,column:49},end:{line:766,column:2}},line:663},"39":{name:"(anonymous_39)",decl:{start:{line:673,column:37},end:{line:673,column:38}},loc:{start:{line:673,column:45},end:{line:753,column:5}},line:673},"40":{name:"(anonymous_40)",decl:{start:{line:695,column:52},end:{line:695,column:53}},loc:{start:{line:695,column:65},end:{line:751,column:4}},line:695},"41":{name:"(anonymous_41)",decl:{start:{line:732,column:14},end:{line:732,column:15}},loc:{start:{line:732,column:34},end:{line:734,column:5}},line:732},"42":{name:"(anonymous_42)",decl:{start:{line:753,column:13},end:{line:753,column:14}},loc:{start:{line:753,column:20},end:{line:757,column:5}},line:753},"43":{name:"(anonymous_43)",decl:{start:{line:773,column:36},end:{line:773,column:37}},loc:{start:{line:773,column:53},end:{line:809,column:1}},line:773},"44":{name:"(anonymous_44)",decl:{start:{line:781,column:33},end:{line:781,column:34}},loc:{start:{line:781,column:43},end:{line:808,column:5}},line:781},"45":{name:"(anonymous_45)",decl:{start:{line:788,column:47},end:{line:788,column:48}},loc:{start:{line:788,column:68},end:{line:807,column:10}},line:788}},branchMap:{"0":{loc:{start:{line:82,column:8},end:{line:85,column:9}},type:"if",locations:[{start:{line:82,column:8},end:{line:85,column:9}},{start:{line:82,column:8},end:{line:85,column:9}}],line:82},"1":{loc:{start:{line:82,column:11},end:{line:82,column:92}},type:"binary-expr",locations:[{start:{line:82,column:11},end:{line:82,column:26}},{start:{line:82,column:28},end:{line:82,column:59}},{start:{line:82,column:61},end:{line:82,column:92}}],line:82},"2":{loc:{start:{line:118,column:3},end:{line:124,column:5}},type:"if",locations:[{start:{line:118,column:3},end:{line:124,column:5}},{start:{line:118,column:3},end:{line:124,column:5}}],line:118},"3":{loc:{start:{line:167,column:8},end:{line:170,column:9}},type:"if",locations:[{start:{line:167,column:8},end:{line:170,column:9}},{start:{line:167,column:8},end:{line:170,column:9}}],line:167},"4":{loc:{start:{line:186,column:2},end:{line:197,column:3}},type:"if",locations:[{start:{line:186,column:2},end:{line:197,column:3}},{start:{line:186,column:2},end:{line:197,column:3}}],line:186},"5":{loc:{start:{line:211,column:4},end:{line:214,column:5}},type:"if",locations:[{start:{line:211,column:4},end:{line:214,column:5}},{start:{line:211,column:4},end:{line:214,column:5}}],line:211},"6":{loc:{start:{line:216,column:8},end:{line:218,column:9}},type:"if",locations:[{start:{line:216,column:8},end:{line:218,column:9}},{start:{line:216,column:8},end:{line:218,column:9}}],line:216},"7":{loc:{start:{line:271,column:11},end:{line:274,column:72}},type:"if",locations:[{start:{line:271,column:11},end:{line:274,column:72}},{start:{line:271,column:11},end:{line:274,column:72}}],line:271},"8":{loc:{start:{line:290,column:5},end:{line:297,column:10}},type:"if",locations:[{start:{line:290,column:5},end:{line:297,column:10}},{start:{line:290,column:5},end:{line:297,column:10}}],line:290},"9":{loc:{start:{line:399,column:4},end:{line:401,column:5}},type:"if",locations:[{start:{line:399,column:4},end:{line:401,column:5}},{start:{line:399,column:4},end:{line:401,column:5}}],line:399},"10":{loc:{start:{line:404,column:2},end:{line:420,column:1}},type:"if",locations:[{start:{line:404,column:2},end:{line:420,column:1}},{start:{line:404,column:2},end:{line:420,column:1}}],line:404},"11":{loc:{start:{line:408,column:7},end:{line:420,column:1}},type:"if",locations:[{start:{line:408,column:7},end:{line:420,column:1}},{start:{line:408,column:7},end:{line:420,column:1}}],line:408},"12":{loc:{start:{line:482,column:16},end:{line:484,column:17}},type:"if",locations:[{start:{line:482,column:16},end:{line:484,column:17}},{start:{line:482,column:16},end:{line:484,column:17}}],line:482},"13":{loc:{start:{line:487,column:14},end:{line:526,column:13}},type:"if",locations:[{start:{line:487,column:14},end:{line:526,column:13}},{start:{line:487,column:14},end:{line:526,column:13}}],line:487},"14":{loc:{start:{line:491,column:19},end:{line:526,column:13}},type:"if",locations:[{start:{line:491,column:19},end:{line:526,column:13}},{start:{line:491,column:19},end:{line:526,column:13}}],line:491},"15":{loc:{start:{line:513,column:17},end:{line:523,column:17}},type:"if",locations:[{start:{line:513,column:17},end:{line:523,column:17}},{start:{line:513,column:17},end:{line:523,column:17}}],line:513},"16":{loc:{start:{line:585,column:4},end:{line:599,column:1}},type:"if",locations:[{start:{line:585,column:4},end:{line:599,column:1}},{start:{line:585,column:4},end:{line:599,column:1}}],line:585},"17":{loc:{start:{line:587,column:8},end:{line:590,column:9}},type:"if",locations:[{start:{line:587,column:8},end:{line:590,column:9}},{start:{line:587,column:8},end:{line:590,column:9}}],line:587},"18":{loc:{start:{line:615,column:8},end:{line:617,column:9}},type:"if",locations:[{start:{line:615,column:8},end:{line:617,column:9}},{start:{line:615,column:8},end:{line:617,column:9}}],line:615},"19":{loc:{start:{line:620,column:4},end:{line:622,column:5}},type:"if",locations:[{start:{line:620,column:4},end:{line:622,column:5}},{start:{line:620,column:4},end:{line:622,column:5}}],line:620},"20":{loc:{start:{line:623,column:4},end:{line:625,column:5}},type:"if",locations:[{start:{line:623,column:4},end:{line:625,column:5}},{start:{line:623,column:4},end:{line:625,column:5}}],line:623},"21":{loc:{start:{line:627,column:8},end:{line:629,column:9}},type:"if",locations:[{start:{line:627,column:8},end:{line:629,column:9}},{start:{line:627,column:8},end:{line:629,column:9}}],line:627},"22":{loc:{start:{line:634,column:12},end:{line:640,column:13}},type:"if",locations:[{start:{line:634,column:12},end:{line:640,column:13}},{start:{line:634,column:12},end:{line:640,column:13}}],line:634},"23":{loc:{start:{line:665,column:2},end:{line:764,column:1}},type:"if",locations:[{start:{line:665,column:2},end:{line:764,column:1}},{start:{line:665,column:2},end:{line:764,column:1}}],line:665},"24":{loc:{start:{line:674,column:8},end:{line:677,column:9}},type:"if",locations:[{start:{line:674,column:8},end:{line:677,column:9}},{start:{line:674,column:8},end:{line:677,column:9}}],line:674},"25":{loc:{start:{line:678,column:2},end:{line:692,column:7}},type:"if",locations:[{start:{line:678,column:2},end:{line:692,column:7}},{start:{line:678,column:2},end:{line:692,column:7}}],line:678},"26":{loc:{start:{line:682,column:4},end:{line:690,column:5}},type:"if",locations:[{start:{line:682,column:4},end:{line:690,column:5}},{start:{line:682,column:4},end:{line:690,column:5}}],line:682},"27":{loc:{start:{line:693,column:3},end:{line:752,column:4}},type:"if",locations:[{start:{line:693,column:3},end:{line:752,column:4}},{start:{line:693,column:3},end:{line:752,column:4}}],line:693},"28":{loc:{start:{line:696,column:3},end:{line:749,column:2}},type:"if",locations:[{start:{line:696,column:3},end:{line:749,column:2}},{start:{line:696,column:3},end:{line:749,column:2}}],line:696},"29":{loc:{start:{line:696,column:6},end:{line:696,column:44}},type:"binary-expr",locations:[{start:{line:696,column:6},end:{line:696,column:15}},{start:{line:696,column:18},end:{line:696,column:44}}],line:696},"30":{loc:{start:{line:707,column:3},end:{line:712,column:4}},type:"if",locations:[{start:{line:707,column:3},end:{line:712,column:4}},{start:{line:707,column:3},end:{line:712,column:4}}],line:707},"31":{loc:{start:{line:713,column:3},end:{line:724,column:4}},type:"if",locations:[{start:{line:713,column:3},end:{line:724,column:4}},{start:{line:713,column:3},end:{line:724,column:4}}],line:713},"32":{loc:{start:{line:716,column:4},end:{line:720,column:5}},type:"if",locations:[{start:{line:716,column:4},end:{line:720,column:5}},{start:{line:716,column:4},end:{line:720,column:5}}],line:716},"33":{loc:{start:{line:716,column:7},end:{line:716,column:71}},type:"binary-expr",locations:[{start:{line:716,column:7},end:{line:716,column:38}},{start:{line:716,column:40},end:{line:716,column:71}}],line:716},"34":{loc:{start:{line:725,column:3},end:{line:730,column:4}},type:"if",locations:[{start:{line:725,column:3},end:{line:730,column:4}},{start:{line:725,column:3},end:{line:730,column:4}}],line:725},"35":{loc:{start:{line:733,column:8},end:{line:733,column:53}},type:"if",locations:[{start:{line:733,column:8},end:{line:733,column:53}},{start:{line:733,column:8},end:{line:733,column:53}}],line:733},"36":{loc:{start:{line:777,column:4},end:{line:780,column:5}},type:"if",locations:[{start:{line:777,column:4},end:{line:780,column:5}},{start:{line:777,column:4},end:{line:780,column:5}}],line:777},"37":{loc:{start:{line:782,column:8},end:{line:785,column:9}},type:"if",locations:[{start:{line:782,column:8},end:{line:785,column:9}},{start:{line:782,column:8},end:{line:785,column:9}}],line:782},"38":{loc:{start:{line:789,column:8},end:{line:807,column:9}},type:"if",locations:[{start:{line:789,column:8},end:{line:807,column:9}},{start:{line:789,column:8},end:{line:807,column:9}}],line:789}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0},b:{"0":[0,0],"1":[0,0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"d6b3ac386383267989b00bb677983745321acd2e"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];cov_tb3dtfwnu=function(){return actualCoverage;};return actualCoverage;}cov_tb3dtfwnu();cov_tb3dtfwnu().s[0]++;require("./../Config/Config.js");// JavaScript source code
var{mongoose}=(cov_tb3dtfwnu().s[1]++,require("./../db/mongoose.js"));var nodemailer=(cov_tb3dtfwnu().s[2]++,require("nodemailer"));var{User}=(cov_tb3dtfwnu().s[3]++,require("./../models/users.js"));var{artist}=(cov_tb3dtfwnu().s[4]++,require("./../models/artists.js"));//artists model
const{ObjectID}=(cov_tb3dtfwnu().s[5]++,require("mongodb"));//var bodyparser = require('body-parser');
const express=(cov_tb3dtfwnu().s[6]++,require('express'));const router=(cov_tb3dtfwnu().s[7]++,express.Router());//var app = express();
const bcrypt=(cov_tb3dtfwnu().s[8]++,require('bcrypt'));var password=(cov_tb3dtfwnu().s[9]++,"abc");///////////////////////////////////////////////
//app.use(bodyparser.json());
var _=(cov_tb3dtfwnu().s[10]++,require('lodash'));//var rand=Math.floor((Math.random() * 100) + 54); //random confirmation code
const jwt=(cov_tb3dtfwnu().s[11]++,require('jsonwebtoken'));//var userservices = require("./../Services/UserServices.js");
//edit user pp imports
var uploadImagefn=(cov_tb3dtfwnu().s[12]++,require("./../Services/ImageService.js").upLoadPhoto);var upload=(cov_tb3dtfwnu().s[13]++,require("./../Services/ImageService.js").UploadUserPhoto);var AuthenticateUser=(cov_tb3dtfwnu().s[14]++,require("./../Services/ImageService.js").AuthenticateUser);var AssignUserImage=(cov_tb3dtfwnu().s[15]++,require("./../Services/ImageService.js").AssignUserImage);//EDIT USER PROFILE PICTURE REQUEST
cov_tb3dtfwnu().s[16]++;router.post("/users/profilepicture",AuthenticateUser,upload,reSizeUserImage,uploadImagefn,AssignUserImage);///////////////////////////////////////////
var smtpTransport=(cov_tb3dtfwnu().s[17]++,nodemailer.createTransport({service:"Gmail",auth:{user:"sw.project.verify@gmail.com",pass:"abcd-1234"}}));//Sign up user
/**
 * @api {post} api/users/signup   Create a new user
 * @apiName SignUp Request for Users
 * @apiGroup Users
 *
 * @apiParam {String} userName      Unique name of the user
 * @apiParam {String} email         email of the user
 * @apiParam {String} password      password of the user
 * @apiParam  {Boolean} isPremium   default is false
 * @apiParam  {Boolean} isActive    default is false until the email is confirmed
 * @apiParam  {Date} birthDate      birthdate of the user
 * @apiParam  {Srting} gender       gender of the user-Limited to 'M' or 'F'
 *
 * @apiSuccess  (200) User added Successfully as inActive. Waiting for Email Confirmation
 * @apiSuccessExample {json} Success-Response:
 *     HTTP/1.1 200 OK
 *     {
 *        "User added Successfully as inActive. Waiting for Email Confirmation "
 *     }
 * @apiError (409)  Conflict. the user already exists: duplicate userName or email
 * @apiError (500) Internal Server Error
 * @apiErrorExample {string} Conflict Error-Response:
 *    HTTP/1.1 409
 *       "UserName and/or Email already exists "
 *
 */cov_tb3dtfwnu().s[18]++;router.post('/users/signup',async(req,res)=>{cov_tb3dtfwnu().f[0]++;cov_tb3dtfwnu().s[19]++;try{const salt=(cov_tb3dtfwnu().s[20]++,await bcrypt.genSalt());const hashedPass=(cov_tb3dtfwnu().s[21]++,await bcrypt.hash(req.body.password,salt));// console.log(req.body.userName)
// console.log(req.body.email)
// console.log(req.body.password)
// console.log(req.body.isPremium)
// console.log(req.body.gender)
// console.log(req.body.birthDate)
cov_tb3dtfwnu().s[22]++;if((cov_tb3dtfwnu().b[1][0]++,req.body.gender)&&(cov_tb3dtfwnu().b[1][1]++,req.body.gender.toString()!="M")&&(cov_tb3dtfwnu().b[1][2]++,req.body.gender.toString()!="F")){cov_tb3dtfwnu().b[0][0]++;cov_tb3dtfwnu().s[23]++;return res.status(400).send("gender must be 'M' or 'F'");}else{cov_tb3dtfwnu().b[0][1]++;}var newacc=(cov_tb3dtfwnu().s[24]++,new User({userName:req.body.userName,email:req.body.email,password:hashedPass,isPremium:req.body.isPremium,gender:req.body.gender,birthDate:req.body.birthDate}));// console.log('2et3amal');
cov_tb3dtfwnu().s[25]++;newacc.save().then(doc=>{cov_tb3dtfwnu().f[1]++;// console.log("skod");
var access=(cov_tb3dtfwnu().s[26]++,'auth');var code=(cov_tb3dtfwnu().s[27]++,jwt.sign({_id:newacc._id.toHexString(),access},'secretkeyforuser',{expiresIn:'1d'}));// console.log(code);
var host=(cov_tb3dtfwnu().s[28]++,req.get('host'));var link=(cov_tb3dtfwnu().s[29]++,"http://"+req.get('host')+"/users/confirm/"+code);cov_tb3dtfwnu().s[30]++;console.log(link);var mailOptions=(cov_tb3dtfwnu().s[31]++,{to:req.body.email,subject:"Please confirm your Email account",html:"Hello,<br> Please Click on the link to verify your email.<br><a href="+link+">Click here to verify</a>"});// console.log(mailOptions);
cov_tb3dtfwnu().s[32]++;smtpTransport.sendMail(mailOptions,function(error,response){cov_tb3dtfwnu().f[2]++;cov_tb3dtfwnu().s[33]++;if(error){cov_tb3dtfwnu().b[2][0]++;cov_tb3dtfwnu().s[34]++;console.log(error);cov_tb3dtfwnu().s[35]++;res.end("error");}else{cov_tb3dtfwnu().b[2][1]++;cov_tb3dtfwnu().s[36]++;// console.log("Message sent: " + response.message);
res.end("sent");}});cov_tb3dtfwnu().s[37]++;res.status(200).send("User added Successfully as inActive. Waiting for Email Confirmation ");},err=>{cov_tb3dtfwnu().f[3]++;cov_tb3dtfwnu().s[38]++;console.log(err);cov_tb3dtfwnu().s[39]++;res.status(409).send("UserName and/or Email already exists ");});}catch{cov_tb3dtfwnu().s[40]++;res.status(500).send();}});//CONFIRMATION OF USER SIGNUP
/**
 * @api {get} api/users/confirm/:code      SignUp Confrimation
 * @apiName SignUp Confirmed for user
 * @apiGroup Users
 *
 * @apiParam {String} code    user-specific code to activate his account
 *
 * @apiSuccess  (200) User was activated successfully
 * @apiSuccessExample {json} Success-Response:
 *     HTTP/1.1 200 OK
 *     {
 *       "Email confirmed successfully!"
 *     }
 * @apiError (404)  User not found.
 * @apiError (401) Unauthorized. Recieved a corrupted code.
 *
 */cov_tb3dtfwnu().s[41]++;router.get('/users/confirm/:code',(req,res)=>{cov_tb3dtfwnu().f[4]++;cov_tb3dtfwnu().s[42]++;User.ActivateByToken(req.params.code).then(user=>{cov_tb3dtfwnu().f[5]++;cov_tb3dtfwnu().s[43]++;if(!user){cov_tb3dtfwnu().b[3][0]++;cov_tb3dtfwnu().s[44]++;res.status(404).send("user not found");cov_tb3dtfwnu().s[45]++;return Promise.reject();}else{cov_tb3dtfwnu().b[3][1]++;}cov_tb3dtfwnu().s[46]++;res.status(200).send("Email confirmed successfully!");}).catch(e=>{cov_tb3dtfwnu().f[6]++;cov_tb3dtfwnu().s[47]++;res.status(401).send("corrupted code");});});cov_tb3dtfwnu().s[48]++;router.post('/users/login',async(req,res)=>{cov_tb3dtfwnu().f[7]++;cov_tb3dtfwnu().s[49]++;console.log(1);var body=(cov_tb3dtfwnu().s[50]++,_.pick(req.body,['email','password']));cov_tb3dtfwnu().s[51]++;console.log(2);cov_tb3dtfwnu().s[52]++;User.findByCredentials(body.email,body.password).then(user=>{cov_tb3dtfwnu().f[8]++;cov_tb3dtfwnu().s[53]++;console.log(3);cov_tb3dtfwnu().s[54]++;if(user.isActive==true){cov_tb3dtfwnu().b[4][0]++;cov_tb3dtfwnu().s[55]++;return user.generateAuthToken().then(token=>{cov_tb3dtfwnu().f[9]++;cov_tb3dtfwnu().s[56]++;console.log(4);cov_tb3dtfwnu().s[57]++;res.header('x-auth',token).send();cov_tb3dtfwnu().s[58]++;console.log(5);});}else{cov_tb3dtfwnu().b[4][1]++;cov_tb3dtfwnu().s[59]++;res.status(403).send("Please go to your inbox and click the link to activate your Email.");}}).catch(e=>{cov_tb3dtfwnu().f[10]++;cov_tb3dtfwnu().s[60]++;console.log(e);cov_tb3dtfwnu().s[61]++;res.status(401).send("Either email or passwrod is incorrect");});//res.send(body)
});// Get User Profile Request
cov_tb3dtfwnu().s[62]++;router.get('/users/me',(req,res)=>{cov_tb3dtfwnu().f[11]++;var token=(cov_tb3dtfwnu().s[63]++,req.header('x-auth'));cov_tb3dtfwnu().s[64]++;if(!token){cov_tb3dtfwnu().b[5][0]++;cov_tb3dtfwnu().s[65]++;res.status(400).send('You should Pass a token to access the profile');}else{cov_tb3dtfwnu().b[5][1]++;}cov_tb3dtfwnu().s[66]++;User.findByToken(token).then(user=>{cov_tb3dtfwnu().f[12]++;cov_tb3dtfwnu().s[67]++;if(!user){cov_tb3dtfwnu().b[6][0]++;cov_tb3dtfwnu().s[68]++;res.status(401).send();}else{cov_tb3dtfwnu().b[6][1]++;}cov_tb3dtfwnu().s[69]++;res.status(302).send(user);}).catch(e=>{cov_tb3dtfwnu().f[13]++;cov_tb3dtfwnu().s[70]++;res.status(401).send();});});/**
 * forgot password
 * ----------------------
 * @api {post} /users/forgot      Request to send email after forgetting password
 * @apiName ForgotPasswordRequest
 * @apiGroup User privacy
 *
 * @apiParam {string} email       in json form
 * @apiParamExample {json} Request-Example:
 *     {
 *       "email": "abc@abc.com"
 *     }
 *
 * @apiSuccessExample {json} Success-Response:
 *     HTTP/1.1 200 OK
 *     {
 *       "message" :"Email Sent Successfully"
 *     }
 *
 * @apiError  500              [Email Cannot BeSent  A problem while sending email]
  * @apiErrorExample {json} Error-Response:
 *     HTTP/1.1 500 serverError
 *     {
 *       "message":"Sending Failed"
 *     }
* @apiError  404       [email of the user not found ]

 * @apiErrorExample {json} Error-Response:
 *     HTTP/1.1 404 not found
 *     {
 *        "message":"Email not found"
 *     }
 */cov_tb3dtfwnu().s[71]++;router.post('/users/forgot',async(req,res)=>{cov_tb3dtfwnu().f[14]++;var reqEmail=(cov_tb3dtfwnu().s[72]++,req.body.email);//console.log(reqEmail)
cov_tb3dtfwnu().s[73]++;try{cov_tb3dtfwnu().s[74]++;await User.findByEmail(reqEmail).then(user=>{cov_tb3dtfwnu().f[15]++;cov_tb3dtfwnu().s[75]++;if(!user){cov_tb3dtfwnu().b[7][0]++;cov_tb3dtfwnu().s[76]++;return res.status(404).json({"message":"Email not found"});}else{cov_tb3dtfwnu().b[7][1]++;}// console.log('henaaaa')
var rand=(cov_tb3dtfwnu().s[77]++,Math.floor(Math.random()*100+54));cov_tb3dtfwnu().s[78]++;user.generateResetToken().then(token=>{cov_tb3dtfwnu().f[16]++;//console.log(token);
var host=(cov_tb3dtfwnu().s[79]++,req.get('host'));var link=(cov_tb3dtfwnu().s[80]++,"http://"+req.get('host')+"/users/reset/?token= "+token);var mailOptions=(cov_tb3dtfwnu().s[81]++,{to:reqEmail,subject:"Reset the password ",html:"Hello,<br> Please Click on the link to reset your password.<br><a href="+link+">Click here to verify</a>"});//console.log(mailOptions);
cov_tb3dtfwnu().s[82]++;smtpTransport.sendMail(mailOptions,function(error,response){cov_tb3dtfwnu().f[17]++;cov_tb3dtfwnu().s[83]++;if(error){cov_tb3dtfwnu().b[8][0]++;cov_tb3dtfwnu().s[84]++;console.log(error);cov_tb3dtfwnu().s[85]++;res.status(500).json({"message":"sending failed"});}else{cov_tb3dtfwnu().b[8][1]++;cov_tb3dtfwnu().s[86]++;console.log("Message sent: "+response.message);//res.send(token);
cov_tb3dtfwnu().s[87]++;res.json({"message":"Email Sent Successfully"});}});});});}catch{cov_tb3dtfwnu().s[88]++;res.status(500).json({"message":"Sending Failed"});}});/**
 * Reset password
 * ----------------------
 * @api {patch} /users/reset      Request to reset password
 * @apiName ResetRequest
 * @apiGroup User privacy
 *
 * @apiParam {string} token          shoulb be passed in query
 * @apiParam {string}  newPassword    should be passed in body in json form
 *
 *
 * @apiSuccessExample {json} Success-Response:
 *     HTTP/1.1 200 OK
 *     {
 *      "message": "Password has been reset successfully""
 *     }
 *
 *
 * @apiErrorExample {json} Error-Response:
 *     HTTP/1.1 401 unauthorized
 *     {
 *       "message": "Reset Failed""
 *     }
 */cov_tb3dtfwnu().s[89]++;router.patch('/users/reset',async(req,res)=>{cov_tb3dtfwnu().f[18]++;var newPassword=(cov_tb3dtfwnu().s[90]++,req.body.newPassword);// console.log(newPassword)
//console.log("helloooooo");
var token=(cov_tb3dtfwnu().s[91]++,req.query.token);const salt=(cov_tb3dtfwnu().s[92]++,await bcrypt.genSalt());const hashedPass=(cov_tb3dtfwnu().s[93]++,await bcrypt.hash(newPassword,salt));//console.log(hashedPass);
cov_tb3dtfwnu().s[94]++;await User.checkTokenAndFind(token).then(user=>{cov_tb3dtfwnu().f[19]++;cov_tb3dtfwnu().s[95]++;user.password=hashedPass;cov_tb3dtfwnu().s[96]++;user.resetToken=undefined;cov_tb3dtfwnu().s[97]++;user.save();cov_tb3dtfwnu().s[98]++;res.json({"message":"Password has been reset successfully"});// console.log(user);
}).catch(e=>{cov_tb3dtfwnu().f[20]++;cov_tb3dtfwnu().s[99]++;res.status(401).json({"message":'Reset Failed'});});});//REGULAR ACCOUNT
/**
 * @api {patch} api/users/:id/regular    User wants to unsubscribe from premium features
 * @apiName WithdrawPremiumServies
 * @apiGroup Users
 * @apiHeader {string} x-auth          Only users
 * @apiParam {String} id          the id of the user has to be passed
 *
 * @apiSuccessExample {json} Success-Response:
 *     HTTP/1.1 200 OK
 *     {
 *       "message": "Your account has been changed to regular account"
 *     }

 *
 * @apiError (404)  You are  not premium in the firstplace
 *
 * @apiErrorExample {json} Error-Response:
 *    HTTP/1.1 404
 *     {
 *       "message":"you are not premium , you already have a regular account "
 *     }
 *
 * @apiError (401)  authentication failed
 * @apiErrorExample {json} Error-Response:
 *    HTTP/1.1 401
 *     {
 *       "message":"authentication Failed" "
 *     }
 *
 */cov_tb3dtfwnu().s[100]++;router.patch('/users/:id/regular',async(req,res)=>{cov_tb3dtfwnu().f[21]++;var userId;var id=(cov_tb3dtfwnu().s[101]++,req.params.id);//console.log(id);
var token=(cov_tb3dtfwnu().s[102]++,req.header('x-auth'));cov_tb3dtfwnu().s[103]++;User.findByToken(token).then(user=>{cov_tb3dtfwnu().f[22]++;cov_tb3dtfwnu().s[104]++;if(!user){cov_tb3dtfwnu().b[9][0]++;cov_tb3dtfwnu().s[105]++;return Promise.reject();}else{cov_tb3dtfwnu().b[9][1]++;}cov_tb3dtfwnu().s[106]++;userId=user._id;//console.log(userId);
cov_tb3dtfwnu().s[107]++;if(!(userId.toString()===id)){cov_tb3dtfwnu().b[10][0]++;cov_tb3dtfwnu().s[108]++;return res.status(401).json({"message":"authentication Failed"});}else{cov_tb3dtfwnu().b[10][1]++;cov_tb3dtfwnu().s[109]++;if(user.isPremium===false){cov_tb3dtfwnu().b[11][0]++;cov_tb3dtfwnu().s[110]++;return res.status(404).json({"message":"you are not premium , you already have a regular account"});}else{cov_tb3dtfwnu().b[11][1]++;cov_tb3dtfwnu().s[111]++;user.isPremium=false;cov_tb3dtfwnu().s[112]++;user.save();cov_tb3dtfwnu().s[113]++;res.status(200).json({"message":"Your account has been changed to regular account"});//console.log('inside the request')
//console.log(user.isPremium);
}}}).catch(e=>{cov_tb3dtfwnu().f[23]++;cov_tb3dtfwnu().s[114]++;return res.status(401).json({"message":"authentication Failed"});});});//REQUEST FOR A PREMIUM ACCOUNT
/**
 * @api {get} /users/:id/premium    Send a confirmation mail to be a premium user
 * @apiName Join Premium Request
 * @apiGroup Users
 * @apiHeader {string} x-auth            token Only users can request to premium
 *
 * @apiParam {String} id             the id of the user should be passed in the path
 *
 *
 * @apiSuccessExample {json} Success-Response:
 *     HTTP/1.1 200 OK
 *     {
 *
 *       "message": "confirmation request has been sent, You will be a premium user soon"
 *     }
 * @apiSuccessExample {json} Success-Response:
 *     HTTP/1.1 200 OK
 *     {
 *
 *       "message": "You are already a premium user.Thanks for that"
 *     }
 *
 *
 * @apiError (401)  authentication failed
 * @apiErrorExample {json} Error-Response:
 *    HTTP/1.1 401
 *     {
 *       "message":"authentication Failed" "
 *     }
 *
 * @apiError 500       EmailCannotBeSent  A problem while sending email
 *
 * @apiErrorExample {json} Error-Response:
 *     HTTP/1.1 500 server Error
 *     {
 *       "message":"error,failed to send"
 *     }
 *
 *
*/cov_tb3dtfwnu().s[115]++;router.get('/users/:id/premium',async(req,res)=>{cov_tb3dtfwnu().f[24]++;var id=(cov_tb3dtfwnu().s[116]++,req.params.id);var userId;var token=(cov_tb3dtfwnu().s[117]++,req.header('x-auth'));cov_tb3dtfwnu().s[118]++;User.findByToken(token).then(user=>{cov_tb3dtfwnu().f[25]++;cov_tb3dtfwnu().s[119]++;if(!user){cov_tb3dtfwnu().b[12][0]++;cov_tb3dtfwnu().s[120]++;return Promise.reject();}else{cov_tb3dtfwnu().b[12][1]++;}cov_tb3dtfwnu().s[121]++;userId=user._id;//console.log(userId);
cov_tb3dtfwnu().s[122]++;if(!(userId.toString()===id)){cov_tb3dtfwnu().b[13][0]++;cov_tb3dtfwnu().s[123]++;return res.status(401).json({"message":"authentication Failed"});}else{cov_tb3dtfwnu().b[13][1]++;cov_tb3dtfwnu().s[124]++;if(user.isPremium===true){cov_tb3dtfwnu().b[14][0]++;cov_tb3dtfwnu().s[125]++;return res.status(200).json({"message":"you are already a premium user, thanks for that"});}else{cov_tb3dtfwnu().b[14][1]++;var email=(cov_tb3dtfwnu().s[126]++,user.email);var type=(cov_tb3dtfwnu().s[127]++,'premium');var code=(cov_tb3dtfwnu().s[128]++,jwt.sign({_id:user._id,type},'secretkeyforuser',{expiresIn:'1d'}));cov_tb3dtfwnu().s[129]++;console.log(code);var host=(cov_tb3dtfwnu().s[130]++,req.get('host'));var link=(cov_tb3dtfwnu().s[131]++,"http://"+req.get('host')+"/users/confirmPremium/?token= "+code);//console.log(link);
var mailOptions=(cov_tb3dtfwnu().s[132]++,{to:email,subject:"Please confirm your Premium account",html:"Hello,<br> Please Click on the link to confirm your premium account.<br><a href="+link+">Click here to verify</a>"});//console.log(mailOptions);
cov_tb3dtfwnu().s[133]++;smtpTransport.sendMail(mailOptions,function(error,response){cov_tb3dtfwnu().f[26]++;cov_tb3dtfwnu().s[134]++;if(error){cov_tb3dtfwnu().b[15][0]++;cov_tb3dtfwnu().s[135]++;console.log(error);cov_tb3dtfwnu().s[136]++;res.status(500).json({"message":"error,failed to send"});}else{cov_tb3dtfwnu().b[15][1]++;cov_tb3dtfwnu().s[137]++;console.log("Message sent: "+response.message);cov_tb3dtfwnu().s[138]++;res.status(200).json({"message":"confirmation request has been sent, You will be a premium user soon"});}});}}}).catch(e=>{cov_tb3dtfwnu().f[27]++;cov_tb3dtfwnu().s[139]++;return res.status(401).json({"message":"authentication Failed"});});});//CONFIRMATION OF A PREMIUM ACCOUNT
/**
 * @api {patch} /users/confirmPremium     User is confirmed to be a premium user
 * @apiName Acceptance of Premium Request
 * @apiGroup Users
 * @apiParam {String} token               the token that was sent in the link snet to the user's email
 *
 * @apiSuccessExample {json} Success-Response:
 *     HTTP/1.1 200 OK
 *     {
*           "message" : "Email confirmed successfully,Welcome To Premium Life!"
 *
 *
 *
 *     }
 *
 * @apiError 401  authentication failed
 * @apiErrorExample {json} Error-Response:
 *    HTTP/1.1 401
 *     {
 *       "message":"authentication Failed" "
 *     }
 *

 *
 *
 *
 *
 *
 */cov_tb3dtfwnu().s[140]++;router.patch('/users/confirmPremium/',async(req,res)=>{cov_tb3dtfwnu().f[28]++;var token=(cov_tb3dtfwnu().s[141]++,req.query.token);cov_tb3dtfwnu().s[142]++;try{cov_tb3dtfwnu().s[143]++;decoded=jwt.verify(token,'secretkeyforuser');cov_tb3dtfwnu().s[144]++;if(decoded.type==='premium'){cov_tb3dtfwnu().b[16][0]++;cov_tb3dtfwnu().s[145]++;User.findById(decoded._id).then(user=>{cov_tb3dtfwnu().f[29]++;cov_tb3dtfwnu().s[146]++;if(!user){cov_tb3dtfwnu().b[17][0]++;cov_tb3dtfwnu().s[147]++;return res.status(404).json({"message":"not found"});// return Promise.reject();
}else{cov_tb3dtfwnu().b[17][1]++;}cov_tb3dtfwnu().s[148]++;user.isPremium=true;cov_tb3dtfwnu().s[149]++;user.save();cov_tb3dtfwnu().s[150]++;res.status(200).json({"message":"Email confirmed successfully,Welcome To Premium Life!"});}).catch(e=>{cov_tb3dtfwnu().f[30]++;cov_tb3dtfwnu().s[151]++;return res.status(401).json({"message":"authentication failed"});});}else{cov_tb3dtfwnu().b[16][1]++;}}catch{cov_tb3dtfwnu().s[152]++;res.status(401).json({"message":"authentication failed or invalid token"});}});//GET ARTIST RELATED ARTISTS
cov_tb3dtfwnu().s[153]++;router.get('/users/artists/related',(req,res)=>{cov_tb3dtfwnu().f[31]++;var token=(cov_tb3dtfwnu().s[154]++,req.header('x-auth'));cov_tb3dtfwnu().s[155]++;User.findByToken(token).then(user=>{cov_tb3dtfwnu().f[32]++;cov_tb3dtfwnu().s[156]++;if(!user){cov_tb3dtfwnu().b[18][0]++;cov_tb3dtfwnu().s[157]++;return Promise.reject();}else{cov_tb3dtfwnu().b[18][1]++;}var sentId=(cov_tb3dtfwnu().s[158]++,req.body.artistId);cov_tb3dtfwnu().s[159]++;if(!sentId){cov_tb3dtfwnu().b[19][0]++;cov_tb3dtfwnu().s[160]++;return res.status(400).send("Send the artist ID");}else{cov_tb3dtfwnu().b[19][1]++;}cov_tb3dtfwnu().s[161]++;if(!ObjectID.isValid(sentId)){cov_tb3dtfwnu().b[20][0]++;cov_tb3dtfwnu().s[162]++;return res.status(404).send("Invalid Id");}else{cov_tb3dtfwnu().b[20][1]++;}cov_tb3dtfwnu().s[163]++;artist.findById(sentId).then(myartists=>{cov_tb3dtfwnu().f[33]++;cov_tb3dtfwnu().s[164]++;if(!myartists){cov_tb3dtfwnu().b[21][0]++;cov_tb3dtfwnu().s[165]++;return res.status(404).send('Id not found');}else{cov_tb3dtfwnu().b[21][1]++;}cov_tb3dtfwnu().s[166]++;artist.find({genres:{$in:myartists.genres}}).then(suggestedArtists=>{cov_tb3dtfwnu().f[34]++;cov_tb3dtfwnu().s[167]++;for(var count=(cov_tb3dtfwnu().s[168]++,0);count<suggestedArtists.length;count++){cov_tb3dtfwnu().s[169]++;if(suggestedArtists[count]._id==sentId){cov_tb3dtfwnu().b[22][0]++;var switchvar=(cov_tb3dtfwnu().s[170]++,suggestedArtists[count]);cov_tb3dtfwnu().s[171]++;suggestedArtists[count]=suggestedArtists[suggestedArtists.length-1];cov_tb3dtfwnu().s[172]++;suggestedArtists[suggestedArtists.length-1]=switchvar;cov_tb3dtfwnu().s[173]++;suggestedArtists.pop();cov_tb3dtfwnu().s[174]++;break;}else{cov_tb3dtfwnu().b[22][1]++;}}cov_tb3dtfwnu().s[175]++;res.status(302).send(suggestedArtists);},e=>{cov_tb3dtfwnu().f[35]++;cov_tb3dtfwnu().s[176]++;res.status(500).send("Internal Server error");});},e=>{cov_tb3dtfwnu().f[36]++;cov_tb3dtfwnu().s[177]++;res.status(500).send("Internal server error");});}).catch(e=>{cov_tb3dtfwnu().f[37]++;cov_tb3dtfwnu().s[178]++;res.status(401).send('Unauthorized Access');});});cov_tb3dtfwnu().s[179]++;router.patch('/users/me/editprofile',(req,res)=>{cov_tb3dtfwnu().f[38]++;var token=(cov_tb3dtfwnu().s[180]++,req.header('x-auth'));cov_tb3dtfwnu().s[181]++;if(!token){cov_tb3dtfwnu().b[23][0]++;cov_tb3dtfwnu().s[182]++;return res.status(401).send('You should Pass a token to access the profile');}else{cov_tb3dtfwnu().b[23][1]++;cov_tb3dtfwnu().s[183]++;try{cov_tb3dtfwnu().s[184]++;decoded=jwt.verify(token,'secretkeyforuser');cov_tb3dtfwnu().s[185]++;User.findById(decoded._id).then(user=>{cov_tb3dtfwnu().f[39]++;cov_tb3dtfwnu().s[186]++;if(!user){cov_tb3dtfwnu().b[24][0]++;cov_tb3dtfwnu().s[187]++;return res.status(404).json({"message":"not found"});}else{cov_tb3dtfwnu().b[24][1]++;}cov_tb3dtfwnu().s[188]++;if(req.body.birthDate){cov_tb3dtfwnu().b[25][0]++;var timestamp=(cov_tb3dtfwnu().s[189]++,Date.parse(req.body.birthDate));cov_tb3dtfwnu().s[190]++;if(isNaN(timestamp)==false){cov_tb3dtfwnu().b[26][0]++;var correctDate=(cov_tb3dtfwnu().s[191]++,new Date(timestamp));}else{cov_tb3dtfwnu().b[26][1]++;cov_tb3dtfwnu().s[192]++;return res.status(400).send("invalid date format. use yyyy-mm-dd");}}else{cov_tb3dtfwnu().b[25][1]++;}cov_tb3dtfwnu().s[193]++;if(req.body.userName){cov_tb3dtfwnu().b[27][0]++;cov_tb3dtfwnu().s[194]++;User.findOne({userName:req.body.userName}).then(duplicate=>{cov_tb3dtfwnu().f[40]++;cov_tb3dtfwnu().s[195]++;if((cov_tb3dtfwnu().b[29][0]++,duplicate)&&(cov_tb3dtfwnu().b[29][1]++,duplicate._id!=decoded._id)){cov_tb3dtfwnu().b[28][0]++;cov_tb3dtfwnu().s[196]++;return res.status(403).send("UserName already exists");}else{cov_tb3dtfwnu().b[28][1]++;cov_tb3dtfwnu().s[197]++;try{cov_tb3dtfwnu().s[198]++;if(req.body.userName){cov_tb3dtfwnu().b[30][0]++;cov_tb3dtfwnu().s[199]++;user.userName=req.body.userName;}else{cov_tb3dtfwnu().b[30][1]++;}cov_tb3dtfwnu().s[200]++;if(req.body.gender){cov_tb3dtfwnu().b[31][0]++;cov_tb3dtfwnu().s[201]++;if((cov_tb3dtfwnu().b[33][0]++,req.body.gender.toString()!="M")&&(cov_tb3dtfwnu().b[33][1]++,req.body.gender.toString()!="F")){cov_tb3dtfwnu().b[32][0]++;cov_tb3dtfwnu().s[202]++;return res.status(400).send("gender must be 'M' or 'F'");}else{cov_tb3dtfwnu().b[32][1]++;}cov_tb3dtfwnu().s[203]++;user.gender=req.body.gender;}else{cov_tb3dtfwnu().b[31][1]++;}cov_tb3dtfwnu().s[204]++;if(req.body.birthDate){cov_tb3dtfwnu().b[34][0]++;cov_tb3dtfwnu().s[205]++;user.birthDate=correctDate;}else{cov_tb3dtfwnu().b[34][1]++;}cov_tb3dtfwnu().s[206]++;user.save(function(err,user){cov_tb3dtfwnu().f[41]++;cov_tb3dtfwnu().s[207]++;if(err){cov_tb3dtfwnu().b[35][0]++;cov_tb3dtfwnu().s[208]++;return res.send("invalid userName");}else{cov_tb3dtfwnu().b[35][1]++;}});}catch(e){cov_tb3dtfwnu().s[209]++;return res.status(400).send(e);}cov_tb3dtfwnu().s[210]++;return res.status(200).send("updated");}});}else{cov_tb3dtfwnu().b[27][1]++;}}).catch(e=>{cov_tb3dtfwnu().f[42]++;cov_tb3dtfwnu().s[211]++;return res.status(401).send("authentication failed");});}catch{cov_tb3dtfwnu().s[212]++;return res.status(401).json({"message":"authentication failed or invalid token"});}}});// Change Password
cov_tb3dtfwnu().s[213]++;router.put('/users/changePassword',async(req,res)=>{cov_tb3dtfwnu().f[43]++;var oldPassword=(cov_tb3dtfwnu().s[214]++,req.body.oldPassword);var newPassword=(cov_tb3dtfwnu().s[215]++,req.body.newPassword);var token=(cov_tb3dtfwnu().s[216]++,req.header('x-auth'));cov_tb3dtfwnu().s[217]++;if(!token){cov_tb3dtfwnu().b[36][0]++;cov_tb3dtfwnu().s[218]++;res.status(400).send('You did not pass a token');}else{cov_tb3dtfwnu().b[36][1]++;}cov_tb3dtfwnu().s[219]++;User.findByToken(token).then(user=>{cov_tb3dtfwnu().f[44]++;cov_tb3dtfwnu().s[220]++;if(!user){cov_tb3dtfwnu().b[37][0]++;cov_tb3dtfwnu().s[221]++;res.status(401).send();}else{cov_tb3dtfwnu().b[37][1]++;}cov_tb3dtfwnu().s[222]++;console.log("you are my user");var done=(cov_tb3dtfwnu().s[223]++,0);cov_tb3dtfwnu().s[224]++;bcrypt.compare(oldPassword,user.password,async(err,res2)=>{cov_tb3dtfwnu().f[45]++;cov_tb3dtfwnu().s[225]++;if(res2){cov_tb3dtfwnu().b[38][0]++;cov_tb3dtfwnu().s[226]++;console.log('Your password mached with database hash password');cov_tb3dtfwnu().s[227]++;console.log('lets change password');const salt=(cov_tb3dtfwnu().s[228]++,await bcrypt.genSalt());const hashedPass=(cov_tb3dtfwnu().s[229]++,await bcrypt.hash(newPassword,salt));cov_tb3dtfwnu().s[230]++;console.log(hashedPass);cov_tb3dtfwnu().s[231]++;user.password=hashedPass;cov_tb3dtfwnu().s[232]++;user.save();cov_tb3dtfwnu().s[233]++;console.log('saving user');cov_tb3dtfwnu().s[234]++;done=1;cov_tb3dtfwnu().s[235]++;res.status(200).send("Password has been reset successfully");}else{cov_tb3dtfwnu().b[38][1]++;cov_tb3dtfwnu().s[236]++;console.log(user.password);cov_tb3dtfwnu().s[237]++;console.log(oldPassword);cov_tb3dtfwnu().s[238]++;console.log('Your password not mached.');cov_tb3dtfwnu().s[239]++;done=0;cov_tb3dtfwnu().s[240]++;res.status(403).send("this is not the correct password");}}).catch(err);}).catch(e);});//if(!module.parent){
//  app.listen(3000,()=>{
//      console.log("Started on port 3000");
//  });
//}
cov_tb3dtfwnu().s[241]++;module.exports=router;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,