function cov_191txd3x1b(){var path="G:\\SWbackend\\Integrated\\Backend-team\\Controllers\\UserController.js";var hash="c8de2a5f4f74aa9e7900c4ad618365ee411c0515";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"G:\\SWbackend\\Integrated\\Backend-team\\Controllers\\UserController.js",statementMap:{"0":{start:{line:1,column:0},end:{line:1,column:33}},"1":{start:{line:4,column:19},end:{line:4,column:49}},"2":{start:{line:5,column:17},end:{line:5,column:38}},"3":{start:{line:6,column:15},end:{line:6,column:46}},"4":{start:{line:7,column:13},end:{line:7,column:46}},"5":{start:{line:9,column:17},end:{line:9,column:35}},"6":{start:{line:11,column:16},end:{line:11,column:34}},"7":{start:{line:12,column:15},end:{line:12,column:31}},"8":{start:{line:14,column:15},end:{line:14,column:32}},"9":{start:{line:15,column:15},end:{line:15,column:20}},"10":{start:{line:18,column:8},end:{line:18,column:25}},"11":{start:{line:20,column:12},end:{line:20,column:35}},"12":{start:{line:23,column:20},end:{line:29,column:2}},"13":{start:{line:59,column:0},end:{line:132,column:3}},"14":{start:{line:60,column:4},end:{line:131,column:5}},"15":{start:{line:61,column:21},end:{line:61,column:43}},"16":{start:{line:62,column:27},end:{line:62,column:69}},"17":{start:{line:71,column:8},end:{line:74,column:9}},"18":{start:{line:73,column:10},end:{line:73,column:67}},"19":{start:{line:77,column:21},end:{line:86,column:14}},"20":{start:{line:88,column:8},end:{line:124,column:14}},"21":{start:{line:93,column:14},end:{line:93,column:20}},"22":{start:{line:94,column:13},end:{line:94,column:101}},"23":{start:{line:97,column:11},end:{line:97,column:26}},"24":{start:{line:98,column:11},end:{line:98,column:59}},"25":{start:{line:99,column:2},end:{line:99,column:20}},"26":{start:{line:100,column:18},end:{line:104,column:4}},"27":{start:{line:106,column:2},end:{line:115,column:3}},"28":{start:{line:107,column:3},end:{line:113,column:5}},"29":{start:{line:108,column:4},end:{line:108,column:23}},"30":{start:{line:109,column:3},end:{line:109,column:20}},"31":{start:{line:112,column:3},end:{line:112,column:19}},"32":{start:{line:118,column:12},end:{line:118,column:105}},"33":{start:{line:121,column:16},end:{line:121,column:33}},"34":{start:{line:122,column:16},end:{line:122,column:78}},"35":{start:{line:130,column:8},end:{line:130,column:31}},"36":{start:{line:154,column:0},end:{line:165,column:2}},"37":{start:{line:155,column:3},end:{line:164,column:6}},"38":{start:{line:156,column:8},end:{line:159,column:9}},"39":{start:{line:157,column:3},end:{line:157,column:42}},"40":{start:{line:158,column:12},end:{line:158,column:36}},"41":{start:{line:161,column:2},end:{line:161,column:56}},"42":{start:{line:163,column:8},end:{line:163,column:47}},"43":{start:{line:169,column:0},end:{line:195,column:3}},"44":{start:{line:170,column:4},end:{line:170,column:19}},"45":{start:{line:171,column:15},end:{line:171,column:54}},"46":{start:{line:172,column:4},end:{line:172,column:19}},"47":{start:{line:173,column:4},end:{line:190,column:7}},"48":{start:{line:174,column:8},end:{line:174,column:23}},"49":{start:{line:175,column:2},end:{line:186,column:3}},"50":{start:{line:177,column:3},end:{line:181,column:6}},"51":{start:{line:178,column:12},end:{line:178,column:27}},"52":{start:{line:179,column:12},end:{line:179,column:47}},"53":{start:{line:180,column:6},end:{line:180,column:21}},"54":{start:{line:185,column:3},end:{line:185,column:94}},"55":{start:{line:188,column:8},end:{line:188,column:23}},"56":{start:{line:189,column:8},end:{line:189,column:70}},"57":{start:{line:198,column:0},end:{line:212,column:2}},"58":{start:{line:199,column:16},end:{line:199,column:36}},"59":{start:{line:200,column:4},end:{line:203,column:5}},"60":{start:{line:202,column:8},end:{line:202,column:78}},"61":{start:{line:204,column:4},end:{line:211,column:6}},"62":{start:{line:205,column:8},end:{line:207,column:9}},"63":{start:{line:206,column:12},end:{line:206,column:35}},"64":{start:{line:208,column:8},end:{line:208,column:35}},"65":{start:{line:210,column:8},end:{line:210,column:31}},"66":{start:{line:252,column:0},end:{line:297,column:3}},"67":{start:{line:254,column:17},end:{line:254,column:31}},"68":{start:{line:256,column:4},end:{line:296,column:5}},"69":{start:{line:258,column:5},end:{line:290,column:8}},"70":{start:{line:260,column:11},end:{line:263,column:72}},"71":{start:{line:263,column:12},end:{line:263,column:71}},"72":{start:{line:266,column:13},end:{line:266,column:51}},"73":{start:{line:267,column:4},end:{line:289,column:6}},"74":{start:{line:269,column:13},end:{line:269,column:28}},"75":{start:{line:270,column:13},end:{line:270,column:68}},"76":{start:{line:271,column:20},end:{line:275,column:9}},"77":{start:{line:277,column:4},end:{line:277,column:29}},"78":{start:{line:278,column:4},end:{line:288,column:10}},"79":{start:{line:279,column:5},end:{line:286,column:10}},"80":{start:{line:280,column:12},end:{line:280,column:31}},"81":{start:{line:281,column:8},end:{line:281,column:60}},"82":{start:{line:283,column:12},end:{line:283,column:61}},"83":{start:{line:285,column:8},end:{line:285,column:56}},"84":{start:{line:295,column:8},end:{line:295,column:60}},"85":{start:{line:324,column:0},end:{line:345,column:6}},"86":{start:{line:326,column:20},end:{line:326,column:40}},"87":{start:{line:329,column:14},end:{line:329,column:29}},"88":{start:{line:331,column:17},end:{line:331,column:39}},"89":{start:{line:332,column:23},end:{line:332,column:59}},"90":{start:{line:333,column:3},end:{line:333,column:27}},"91":{start:{line:334,column:4},end:{line:343,column:71}},"92":{start:{line:336,column:7},end:{line:336,column:32}},"93":{start:{line:337,column:7},end:{line:337,column:33}},"94":{start:{line:338,column:7},end:{line:338,column:19}},"95":{start:{line:340,column:7},end:{line:340,column:68}},"96":{start:{line:343,column:20},end:{line:343,column:69}},"97":{start:{line:382,column:0},end:{line:413,column:3}},"98":{start:{line:384,column:11},end:{line:384,column:24}},"99":{start:{line:385,column:4},end:{line:385,column:20}},"100":{start:{line:386,column:16},end:{line:386,column:36}},"101":{start:{line:387,column:4},end:{line:411,column:81}},"102":{start:{line:388,column:4},end:{line:390,column:5}},"103":{start:{line:389,column:8},end:{line:389,column:32}},"104":{start:{line:391,column:2},end:{line:391,column:18}},"105":{start:{line:392,column:2},end:{line:392,column:22}},"106":{start:{line:393,column:2},end:{line:409,column:1}},"107":{start:{line:395,column:6},end:{line:395,column:70}},"108":{start:{line:397,column:7},end:{line:409,column:1}},"109":{start:{line:399,column:4},end:{line:399,column:104}},"110":{start:{line:404,column:4},end:{line:404,column:25}},"111":{start:{line:405,column:4},end:{line:405,column:16}},"112":{start:{line:406,column:4},end:{line:406,column:88}},"113":{start:{line:407,column:4},end:{line:407,column:37}},"114":{start:{line:408,column:4},end:{line:408,column:32}},"115":{start:{line:411,column:15},end:{line:411,column:79}},"116":{start:{line:463,column:0},end:{line:519,column:6}},"117":{start:{line:466,column:20},end:{line:466,column:33}},"118":{start:{line:468,column:23},end:{line:468,column:43}},"119":{start:{line:469,column:13},end:{line:518,column:89}},"120":{start:{line:471,column:16},end:{line:473,column:17}},"121":{start:{line:472,column:20},end:{line:472,column:44}},"122":{start:{line:474,column:14},end:{line:474,column:30}},"123":{start:{line:475,column:14},end:{line:475,column:34}},"124":{start:{line:476,column:14},end:{line:515,column:13}},"125":{start:{line:478,column:18},end:{line:478,column:82}},"126":{start:{line:480,column:19},end:{line:515,column:13}},"127":{start:{line:482,column:16},end:{line:482,column:107}},"128":{start:{line:487,column:27},end:{line:487,column:37}},"129":{start:{line:488,column:26},end:{line:488,column:35}},"130":{start:{line:489,column:27},end:{line:489,column:97}},"131":{start:{line:490,column:16},end:{line:490,column:34}},"132":{start:{line:492,column:25},end:{line:492,column:40}},"133":{start:{line:493,column:25},end:{line:493,column:88}},"134":{start:{line:494,column:16},end:{line:494,column:34}},"135":{start:{line:495,column:32},end:{line:499,column:21}},"136":{start:{line:500,column:16},end:{line:500,column:41}},"137":{start:{line:501,column:16},end:{line:514,column:25}},"138":{start:{line:502,column:17},end:{line:512,column:17}},"139":{start:{line:504,column:24},end:{line:504,column:43}},"140":{start:{line:505,column:20},end:{line:505,column:77}},"141":{start:{line:510,column:24},end:{line:510,column:73}},"142":{start:{line:511,column:20},end:{line:511,column:124}},"143":{start:{line:518,column:23},end:{line:518,column:87}},"144":{start:{line:569,column:0},end:{line:595,column:3}},"145":{start:{line:570,column:15},end:{line:570,column:30}},"146":{start:{line:571,column:0},end:{line:593,column:1}},"147":{start:{line:572,column:4},end:{line:572,column:53}},"148":{start:{line:574,column:4},end:{line:588,column:1}},"149":{start:{line:575,column:6},end:{line:587,column:6}},"150":{start:{line:576,column:8},end:{line:579,column:9}},"151":{start:{line:577,column:3},end:{line:577,column:56}},"152":{start:{line:581,column:8},end:{line:581,column:28}},"153":{start:{line:582,column:8},end:{line:582,column:19}},"154":{start:{line:583,column:8},end:{line:583,column:98}},"155":{start:{line:585,column:7},end:{line:585,column:72}},"156":{start:{line:591,column:4},end:{line:591,column:79}},"157":{start:{line:601,column:0},end:{line:643,column:3}},"158":{start:{line:602,column:16},end:{line:602,column:36}},"159":{start:{line:603,column:4},end:{line:642,column:4}},"160":{start:{line:604,column:8},end:{line:606,column:9}},"161":{start:{line:605,column:12},end:{line:605,column:36}},"162":{start:{line:608,column:15},end:{line:608,column:32}},"163":{start:{line:609,column:4},end:{line:611,column:5}},"164":{start:{line:610,column:8},end:{line:610,column:58}},"165":{start:{line:612,column:4},end:{line:614,column:5}},"166":{start:{line:613,column:8},end:{line:613,column:50}},"167":{start:{line:615,column:4},end:{line:639,column:6}},"168":{start:{line:616,column:8},end:{line:618,column:9}},"169":{start:{line:617,column:12},end:{line:617,column:56}},"170":{start:{line:620,column:8},end:{line:634,column:10}},"171":{start:{line:621,column:8},end:{line:630,column:9}},"172":{start:{line:621,column:22},end:{line:621,column:23}},"173":{start:{line:623,column:12},end:{line:629,column:13}},"174":{start:{line:624,column:30},end:{line:624,column:53}},"175":{start:{line:625,column:16},end:{line:625,column:86}},"176":{start:{line:626,column:16},end:{line:626,column:72}},"177":{start:{line:627,column:16},end:{line:627,column:39}},"178":{start:{line:628,column:16},end:{line:628,column:22}},"179":{start:{line:631,column:8},end:{line:631,column:47}},"180":{start:{line:633,column:12},end:{line:633,column:58}},"181":{start:{line:638,column:8},end:{line:638,column:54}},"182":{start:{line:641,column:4},end:{line:641,column:48}},"183":{start:{line:652,column:0},end:{line:756,column:3}},"184":{start:{line:653,column:12},end:{line:653,column:32}},"185":{start:{line:654,column:2},end:{line:754,column:1}},"186":{start:{line:656,column:4},end:{line:656,column:82}},"187":{start:{line:659,column:0},end:{line:754,column:1}},"188":{start:{line:660,column:4},end:{line:660,column:53}},"189":{start:{line:662,column:5},end:{line:747,column:6}},"190":{start:{line:663,column:8},end:{line:666,column:9}},"191":{start:{line:665,column:3},end:{line:665,column:56}},"192":{start:{line:667,column:2},end:{line:681,column:7}},"193":{start:{line:669,column:20},end:{line:669,column:50}},"194":{start:{line:671,column:4},end:{line:679,column:5}},"195":{start:{line:673,column:23},end:{line:673,column:42}},"196":{start:{line:677,column:5},end:{line:677,column:72}},"197":{start:{line:682,column:3},end:{line:742,column:4}},"198":{start:{line:684,column:4},end:{line:741,column:6}},"199":{start:{line:685,column:3},end:{line:739,column:2}},"200":{start:{line:688,column:4},end:{line:688,column:58}},"201":{start:{line:695,column:8},end:{line:736,column:3}},"202":{start:{line:697,column:3},end:{line:702,column:4}},"203":{start:{line:700,column:4},end:{line:700,column:36}},"204":{start:{line:703,column:3},end:{line:714,column:4}},"205":{start:{line:706,column:4},end:{line:710,column:5}},"206":{start:{line:709,column:5},end:{line:709,column:62}},"207":{start:{line:713,column:4},end:{line:713,column:33}},"208":{start:{line:715,column:3},end:{line:720,column:4}},"209":{start:{line:718,column:5},end:{line:718,column:31}},"210":{start:{line:722,column:4},end:{line:724,column:7}},"211":{start:{line:723,column:8},end:{line:723,column:53}},"212":{start:{line:723,column:17},end:{line:723,column:53}},"213":{start:{line:734,column:3},end:{line:734,column:34}},"214":{start:{line:738,column:8},end:{line:738,column:47}},"215":{start:{line:745,column:8},end:{line:745,column:61}},"216":{start:{line:752,column:4},end:{line:752,column:86}},"217":{start:{line:763,column:1},end:{line:800,column:3}},"218":{start:{line:764,column:20},end:{line:764,column:40}},"219":{start:{line:765,column:20},end:{line:765,column:40}},"220":{start:{line:766,column:14},end:{line:766,column:34}},"221":{start:{line:767,column:4},end:{line:770,column:5}},"222":{start:{line:769,column:8},end:{line:769,column:56}},"223":{start:{line:771,column:4},end:{line:799,column:7}},"224":{start:{line:772,column:8},end:{line:775,column:9}},"225":{start:{line:774,column:12},end:{line:774,column:35}},"226":{start:{line:776,column:4},end:{line:776,column:35}},"227":{start:{line:777,column:4},end:{line:796,column:7}},"228":{start:{line:778,column:8},end:{line:793,column:9}},"229":{start:{line:779,column:12},end:{line:779,column:76}},"230":{start:{line:780,column:12},end:{line:780,column:48}},"231":{start:{line:781,column:29},end:{line:781,column:51}},"232":{start:{line:782,column:35},end:{line:782,column:71}},"233":{start:{line:783,column:16},end:{line:783,column:40}},"234":{start:{line:784,column:16},end:{line:784,column:41}},"235":{start:{line:785,column:16},end:{line:785,column:28}},"236":{start:{line:787,column:16},end:{line:787,column:77}},"237":{start:{line:790,column:12},end:{line:790,column:39}},"238":{start:{line:791,column:12},end:{line:791,column:53}},"239":{start:{line:792,column:12},end:{line:792,column:69}},"240":{start:{line:795,column:8},end:{line:795,column:31}},"241":{start:{line:798,column:8},end:{line:798,column:31}},"242":{start:{line:810,column:1},end:{line:810,column:26}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:59,column:29},end:{line:59,column:30}},loc:{start:{line:59,column:49},end:{line:132,column:1}},line:59},"1":{name:"(anonymous_1)",decl:{start:{line:88,column:27},end:{line:88,column:28}},loc:{start:{line:88,column:36},end:{line:119,column:9}},line:88},"2":{name:"(anonymous_2)",decl:{start:{line:106,column:38},end:{line:106,column:39}},loc:{start:{line:106,column:63},end:{line:115,column:1}},line:106},"3":{name:"(anonymous_3)",decl:{start:{line:120,column:12},end:{line:120,column:13}},loc:{start:{line:120,column:21},end:{line:124,column:13}},line:120},"4":{name:"(anonymous_4)",decl:{start:{line:154,column:34},end:{line:154,column:35}},loc:{start:{line:154,column:47},end:{line:165,column:1}},line:154},"5":{name:"(anonymous_5)",decl:{start:{line:155,column:46},end:{line:155,column:47}},loc:{start:{line:155,column:56},end:{line:162,column:5}},line:155},"6":{name:"(anonymous_6)",decl:{start:{line:162,column:13},end:{line:162,column:14}},loc:{start:{line:162,column:20},end:{line:164,column:5}},line:162},"7":{name:"(anonymous_7)",decl:{start:{line:169,column:28},end:{line:169,column:29}},loc:{start:{line:169,column:48},end:{line:195,column:1}},line:169},"8":{name:"(anonymous_8)",decl:{start:{line:173,column:59},end:{line:173,column:60}},loc:{start:{line:173,column:69},end:{line:187,column:5}},line:173},"9":{name:"(anonymous_9)",decl:{start:{line:177,column:40},end:{line:177,column:41}},loc:{start:{line:177,column:51},end:{line:181,column:4}},line:177},"10":{name:"(anonymous_10)",decl:{start:{line:187,column:13},end:{line:187,column:14}},loc:{start:{line:187,column:20},end:{line:190,column:5}},line:187},"11":{name:"(anonymous_11)",decl:{start:{line:198,column:23},end:{line:198,column:24}},loc:{start:{line:198,column:36},end:{line:212,column:1}},line:198},"12":{name:"(anonymous_12)",decl:{start:{line:204,column:33},end:{line:204,column:34}},loc:{start:{line:204,column:43},end:{line:209,column:5}},line:204},"13":{name:"(anonymous_13)",decl:{start:{line:209,column:13},end:{line:209,column:14}},loc:{start:{line:209,column:20},end:{line:211,column:5}},line:209},"14":{name:"(anonymous_14)",decl:{start:{line:252,column:29},end:{line:252,column:30}},loc:{start:{line:252,column:49},end:{line:297,column:1}},line:252},"15":{name:"(anonymous_15)",decl:{start:{line:258,column:43},end:{line:258,column:44}},loc:{start:{line:258,column:51},end:{line:290,column:6}},line:258},"16":{name:"(anonymous_16)",decl:{start:{line:267,column:35},end:{line:267,column:36}},loc:{start:{line:267,column:44},end:{line:289,column:5}},line:267},"17":{name:"(anonymous_17)",decl:{start:{line:278,column:40},end:{line:278,column:41}},loc:{start:{line:278,column:65},end:{line:288,column:9}},line:278},"18":{name:"(anonymous_18)",decl:{start:{line:324,column:28},end:{line:324,column:29}},loc:{start:{line:324,column:45},end:{line:345,column:5}},line:324},"19":{name:"(anonymous_19)",decl:{start:{line:334,column:45},end:{line:334,column:46}},loc:{start:{line:334,column:53},end:{line:343,column:5}},line:334},"20":{name:"(anonymous_20)",decl:{start:{line:343,column:13},end:{line:343,column:14}},loc:{start:{line:343,column:19},end:{line:343,column:70}},line:343},"21":{name:"(anonymous_21)",decl:{start:{line:382,column:35},end:{line:382,column:36}},loc:{start:{line:382,column:55},end:{line:413,column:1}},line:382},"22":{name:"(anonymous_22)",decl:{start:{line:387,column:33},end:{line:387,column:34}},loc:{start:{line:387,column:43},end:{line:411,column:1}},line:387},"23":{name:"(anonymous_23)",decl:{start:{line:411,column:9},end:{line:411,column:10}},loc:{start:{line:411,column:14},end:{line:411,column:80}},line:411},"24":{name:"(anonymous_24)",decl:{start:{line:463,column:33},end:{line:463,column:34}},loc:{start:{line:464,column:0},end:{line:519,column:5}},line:464},"25":{name:"(anonymous_25)",decl:{start:{line:469,column:42},end:{line:469,column:43}},loc:{start:{line:470,column:13},end:{line:518,column:9}},line:470},"26":{name:"(anonymous_26)",decl:{start:{line:501,column:52},end:{line:501,column:53}},loc:{start:{line:501,column:77},end:{line:514,column:23}},line:501},"27":{name:"(anonymous_27)",decl:{start:{line:518,column:17},end:{line:518,column:18}},loc:{start:{line:518,column:22},end:{line:518,column:88}},line:518},"28":{name:"(anonymous_28)",decl:{start:{line:569,column:38},end:{line:569,column:39}},loc:{start:{line:569,column:55},end:{line:595,column:2}},line:569},"29":{name:"(anonymous_29)",decl:{start:{line:575,column:38},end:{line:575,column:39}},loc:{start:{line:575,column:46},end:{line:584,column:5}},line:575},"30":{name:"(anonymous_30)",decl:{start:{line:584,column:13},end:{line:584,column:14}},loc:{start:{line:584,column:20},end:{line:587,column:5}},line:584},"31":{name:"(anonymous_31)",decl:{start:{line:601,column:36},end:{line:601,column:37}},loc:{start:{line:601,column:47},end:{line:643,column:1}},line:601},"32":{name:"(anonymous_32)",decl:{start:{line:603,column:33},end:{line:603,column:34}},loc:{start:{line:603,column:41},end:{line:640,column:3}},line:603},"33":{name:"(anonymous_33)",decl:{start:{line:615,column:33},end:{line:615,column:34}},loc:{start:{line:615,column:46},end:{line:636,column:5}},line:615},"34":{name:"(anonymous_34)",decl:{start:{line:620,column:58},end:{line:620,column:59}},loc:{start:{line:620,column:78},end:{line:632,column:9}},line:620},"35":{name:"(anonymous_35)",decl:{start:{line:632,column:10},end:{line:632,column:11}},loc:{start:{line:632,column:15},end:{line:634,column:9}},line:632},"36":{name:"(anonymous_36)",decl:{start:{line:636,column:6},end:{line:636,column:7}},loc:{start:{line:636,column:11},end:{line:639,column:5}},line:636},"37":{name:"(anonymous_37)",decl:{start:{line:640,column:11},end:{line:640,column:12}},loc:{start:{line:640,column:16},end:{line:642,column:3}},line:640},"38":{name:"(anonymous_38)",decl:{start:{line:652,column:37},end:{line:652,column:38}},loc:{start:{line:652,column:49},end:{line:756,column:2}},line:652},"39":{name:"(anonymous_39)",decl:{start:{line:662,column:37},end:{line:662,column:38}},loc:{start:{line:662,column:45},end:{line:743,column:5}},line:662},"40":{name:"(anonymous_40)",decl:{start:{line:684,column:52},end:{line:684,column:53}},loc:{start:{line:684,column:65},end:{line:741,column:4}},line:684},"41":{name:"(anonymous_41)",decl:{start:{line:722,column:14},end:{line:722,column:15}},loc:{start:{line:722,column:34},end:{line:724,column:5}},line:722},"42":{name:"(anonymous_42)",decl:{start:{line:743,column:13},end:{line:743,column:14}},loc:{start:{line:743,column:20},end:{line:747,column:5}},line:743},"43":{name:"(anonymous_43)",decl:{start:{line:763,column:36},end:{line:763,column:37}},loc:{start:{line:763,column:53},end:{line:800,column:1}},line:763},"44":{name:"(anonymous_44)",decl:{start:{line:771,column:33},end:{line:771,column:34}},loc:{start:{line:771,column:43},end:{line:797,column:5}},line:771},"45":{name:"(anonymous_45)",decl:{start:{line:777,column:47},end:{line:777,column:48}},loc:{start:{line:777,column:68},end:{line:794,column:5}},line:777},"46":{name:"(anonymous_46)",decl:{start:{line:794,column:13},end:{line:794,column:14}},loc:{start:{line:794,column:20},end:{line:796,column:5}},line:794},"47":{name:"(anonymous_47)",decl:{start:{line:797,column:13},end:{line:797,column:14}},loc:{start:{line:797,column:20},end:{line:799,column:5}},line:797}},branchMap:{"0":{loc:{start:{line:71,column:8},end:{line:74,column:9}},type:"if",locations:[{start:{line:71,column:8},end:{line:74,column:9}},{start:{line:71,column:8},end:{line:74,column:9}}],line:71},"1":{loc:{start:{line:71,column:11},end:{line:71,column:92}},type:"binary-expr",locations:[{start:{line:71,column:11},end:{line:71,column:26}},{start:{line:71,column:28},end:{line:71,column:59}},{start:{line:71,column:61},end:{line:71,column:92}}],line:71},"2":{loc:{start:{line:107,column:3},end:{line:113,column:5}},type:"if",locations:[{start:{line:107,column:3},end:{line:113,column:5}},{start:{line:107,column:3},end:{line:113,column:5}}],line:107},"3":{loc:{start:{line:156,column:8},end:{line:159,column:9}},type:"if",locations:[{start:{line:156,column:8},end:{line:159,column:9}},{start:{line:156,column:8},end:{line:159,column:9}}],line:156},"4":{loc:{start:{line:175,column:2},end:{line:186,column:3}},type:"if",locations:[{start:{line:175,column:2},end:{line:186,column:3}},{start:{line:175,column:2},end:{line:186,column:3}}],line:175},"5":{loc:{start:{line:200,column:4},end:{line:203,column:5}},type:"if",locations:[{start:{line:200,column:4},end:{line:203,column:5}},{start:{line:200,column:4},end:{line:203,column:5}}],line:200},"6":{loc:{start:{line:205,column:8},end:{line:207,column:9}},type:"if",locations:[{start:{line:205,column:8},end:{line:207,column:9}},{start:{line:205,column:8},end:{line:207,column:9}}],line:205},"7":{loc:{start:{line:260,column:11},end:{line:263,column:72}},type:"if",locations:[{start:{line:260,column:11},end:{line:263,column:72}},{start:{line:260,column:11},end:{line:263,column:72}}],line:260},"8":{loc:{start:{line:279,column:5},end:{line:286,column:10}},type:"if",locations:[{start:{line:279,column:5},end:{line:286,column:10}},{start:{line:279,column:5},end:{line:286,column:10}}],line:279},"9":{loc:{start:{line:388,column:4},end:{line:390,column:5}},type:"if",locations:[{start:{line:388,column:4},end:{line:390,column:5}},{start:{line:388,column:4},end:{line:390,column:5}}],line:388},"10":{loc:{start:{line:393,column:2},end:{line:409,column:1}},type:"if",locations:[{start:{line:393,column:2},end:{line:409,column:1}},{start:{line:393,column:2},end:{line:409,column:1}}],line:393},"11":{loc:{start:{line:397,column:7},end:{line:409,column:1}},type:"if",locations:[{start:{line:397,column:7},end:{line:409,column:1}},{start:{line:397,column:7},end:{line:409,column:1}}],line:397},"12":{loc:{start:{line:471,column:16},end:{line:473,column:17}},type:"if",locations:[{start:{line:471,column:16},end:{line:473,column:17}},{start:{line:471,column:16},end:{line:473,column:17}}],line:471},"13":{loc:{start:{line:476,column:14},end:{line:515,column:13}},type:"if",locations:[{start:{line:476,column:14},end:{line:515,column:13}},{start:{line:476,column:14},end:{line:515,column:13}}],line:476},"14":{loc:{start:{line:480,column:19},end:{line:515,column:13}},type:"if",locations:[{start:{line:480,column:19},end:{line:515,column:13}},{start:{line:480,column:19},end:{line:515,column:13}}],line:480},"15":{loc:{start:{line:502,column:17},end:{line:512,column:17}},type:"if",locations:[{start:{line:502,column:17},end:{line:512,column:17}},{start:{line:502,column:17},end:{line:512,column:17}}],line:502},"16":{loc:{start:{line:574,column:4},end:{line:588,column:1}},type:"if",locations:[{start:{line:574,column:4},end:{line:588,column:1}},{start:{line:574,column:4},end:{line:588,column:1}}],line:574},"17":{loc:{start:{line:576,column:8},end:{line:579,column:9}},type:"if",locations:[{start:{line:576,column:8},end:{line:579,column:9}},{start:{line:576,column:8},end:{line:579,column:9}}],line:576},"18":{loc:{start:{line:604,column:8},end:{line:606,column:9}},type:"if",locations:[{start:{line:604,column:8},end:{line:606,column:9}},{start:{line:604,column:8},end:{line:606,column:9}}],line:604},"19":{loc:{start:{line:609,column:4},end:{line:611,column:5}},type:"if",locations:[{start:{line:609,column:4},end:{line:611,column:5}},{start:{line:609,column:4},end:{line:611,column:5}}],line:609},"20":{loc:{start:{line:612,column:4},end:{line:614,column:5}},type:"if",locations:[{start:{line:612,column:4},end:{line:614,column:5}},{start:{line:612,column:4},end:{line:614,column:5}}],line:612},"21":{loc:{start:{line:616,column:8},end:{line:618,column:9}},type:"if",locations:[{start:{line:616,column:8},end:{line:618,column:9}},{start:{line:616,column:8},end:{line:618,column:9}}],line:616},"22":{loc:{start:{line:623,column:12},end:{line:629,column:13}},type:"if",locations:[{start:{line:623,column:12},end:{line:629,column:13}},{start:{line:623,column:12},end:{line:629,column:13}}],line:623},"23":{loc:{start:{line:654,column:2},end:{line:754,column:1}},type:"if",locations:[{start:{line:654,column:2},end:{line:754,column:1}},{start:{line:654,column:2},end:{line:754,column:1}}],line:654},"24":{loc:{start:{line:663,column:8},end:{line:666,column:9}},type:"if",locations:[{start:{line:663,column:8},end:{line:666,column:9}},{start:{line:663,column:8},end:{line:666,column:9}}],line:663},"25":{loc:{start:{line:667,column:2},end:{line:681,column:7}},type:"if",locations:[{start:{line:667,column:2},end:{line:681,column:7}},{start:{line:667,column:2},end:{line:681,column:7}}],line:667},"26":{loc:{start:{line:671,column:4},end:{line:679,column:5}},type:"if",locations:[{start:{line:671,column:4},end:{line:679,column:5}},{start:{line:671,column:4},end:{line:679,column:5}}],line:671},"27":{loc:{start:{line:682,column:3},end:{line:742,column:4}},type:"if",locations:[{start:{line:682,column:3},end:{line:742,column:4}},{start:{line:682,column:3},end:{line:742,column:4}}],line:682},"28":{loc:{start:{line:685,column:3},end:{line:739,column:2}},type:"if",locations:[{start:{line:685,column:3},end:{line:739,column:2}},{start:{line:685,column:3},end:{line:739,column:2}}],line:685},"29":{loc:{start:{line:685,column:6},end:{line:685,column:44}},type:"binary-expr",locations:[{start:{line:685,column:6},end:{line:685,column:15}},{start:{line:685,column:18},end:{line:685,column:44}}],line:685},"30":{loc:{start:{line:697,column:3},end:{line:702,column:4}},type:"if",locations:[{start:{line:697,column:3},end:{line:702,column:4}},{start:{line:697,column:3},end:{line:702,column:4}}],line:697},"31":{loc:{start:{line:703,column:3},end:{line:714,column:4}},type:"if",locations:[{start:{line:703,column:3},end:{line:714,column:4}},{start:{line:703,column:3},end:{line:714,column:4}}],line:703},"32":{loc:{start:{line:706,column:4},end:{line:710,column:5}},type:"if",locations:[{start:{line:706,column:4},end:{line:710,column:5}},{start:{line:706,column:4},end:{line:710,column:5}}],line:706},"33":{loc:{start:{line:706,column:7},end:{line:706,column:71}},type:"binary-expr",locations:[{start:{line:706,column:7},end:{line:706,column:38}},{start:{line:706,column:40},end:{line:706,column:71}}],line:706},"34":{loc:{start:{line:715,column:3},end:{line:720,column:4}},type:"if",locations:[{start:{line:715,column:3},end:{line:720,column:4}},{start:{line:715,column:3},end:{line:720,column:4}}],line:715},"35":{loc:{start:{line:723,column:8},end:{line:723,column:53}},type:"if",locations:[{start:{line:723,column:8},end:{line:723,column:53}},{start:{line:723,column:8},end:{line:723,column:53}}],line:723},"36":{loc:{start:{line:767,column:4},end:{line:770,column:5}},type:"if",locations:[{start:{line:767,column:4},end:{line:770,column:5}},{start:{line:767,column:4},end:{line:770,column:5}}],line:767},"37":{loc:{start:{line:772,column:8},end:{line:775,column:9}},type:"if",locations:[{start:{line:772,column:8},end:{line:775,column:9}},{start:{line:772,column:8},end:{line:775,column:9}}],line:772},"38":{loc:{start:{line:778,column:8},end:{line:793,column:9}},type:"if",locations:[{start:{line:778,column:8},end:{line:793,column:9}},{start:{line:778,column:8},end:{line:793,column:9}}],line:778}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0},b:{"0":[0,0],"1":[0,0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"c8de2a5f4f74aa9e7900c4ad618365ee411c0515"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];cov_191txd3x1b=function(){return actualCoverage;};return actualCoverage;}cov_191txd3x1b();cov_191txd3x1b().s[0]++;require("./../Config/Config.js");// JavaScript source code
var{mongoose}=(cov_191txd3x1b().s[1]++,require("./../db/mongoose.js"));var nodemailer=(cov_191txd3x1b().s[2]++,require("nodemailer"));var{User}=(cov_191txd3x1b().s[3]++,require("./../models/users.js"));var{artist}=(cov_191txd3x1b().s[4]++,require("./../models/Artists.js"));//artists model
const{ObjectID}=(cov_191txd3x1b().s[5]++,require("mongodb"));//var bodyparser = require('body-parser');
const express=(cov_191txd3x1b().s[6]++,require('express'));const router=(cov_191txd3x1b().s[7]++,express.Router());//var app = express();
const bcrypt=(cov_191txd3x1b().s[8]++,require('bcrypt'));var password=(cov_191txd3x1b().s[9]++,"abc");///////////////////////////////////////////////
//app.use(bodyparser.json());
var _=(cov_191txd3x1b().s[10]++,require('lodash'));//var rand=Math.floor((Math.random() * 100) + 54); //random confirmation code
const jwt=(cov_191txd3x1b().s[11]++,require('jsonwebtoken'));//var userservices = require("./../Services/UserServices.js");
var smtpTransport=(cov_191txd3x1b().s[12]++,nodemailer.createTransport({service:"Gmail",auth:{user:"sw.project.verify@gmail.com",pass:"abcd-1234"}}));//Sign up user
/**
 * @api {post} api/users/signup   Create a new user
 * @apiName SignUp Request for Users
 * @apiGroup Users
 *
 * @apiParam {String} userName      Unique name of the user
 * @apiParam {String} email         email of the user
 * @apiParam {String} password      password of the user
 * @apiParam  {Boolean} isPremium   default is false
 * @apiParam  {Boolean} isActive    default is false until the email is confirmed
 * @apiParam  {Date} birthDate      birthdate of the user
 * @apiParam  {Srting} gender       gender of the user-Limited to 'M' or 'F'
 *
 * @apiSuccess  (200) User added Successfully as inActive. Waiting for Email Confirmation
 * @apiSuccessExample {json} Success-Response:
 *     HTTP/1.1 200 OK
 *     {
 *        "User added Successfully as inActive. Waiting for Email Confirmation "
 *     }
 * @apiError (409)  Conflict. the user already exists: duplicate userName or email
 * @apiError (500) Internal Server Error
 * @apiErrorExample {string} Conflict Error-Response:
 *    HTTP/1.1 409
 *       "UserName and/or Email already exists "
 *
 */cov_191txd3x1b().s[13]++;router.post('/users/signup',async(req,res)=>{cov_191txd3x1b().f[0]++;cov_191txd3x1b().s[14]++;try{const salt=(cov_191txd3x1b().s[15]++,await bcrypt.genSalt());const hashedPass=(cov_191txd3x1b().s[16]++,await bcrypt.hash(req.body.password,salt));// console.log(req.body.userName)
// console.log(req.body.email)
// console.log(req.body.password)
// console.log(req.body.isPremium)
// console.log(req.body.gender)
// console.log(req.body.birthDate)
cov_191txd3x1b().s[17]++;if((cov_191txd3x1b().b[1][0]++,req.body.gender)&&(cov_191txd3x1b().b[1][1]++,req.body.gender.toString()!="M")&&(cov_191txd3x1b().b[1][2]++,req.body.gender.toString()!="F")){cov_191txd3x1b().b[0][0]++;cov_191txd3x1b().s[18]++;return res.status(400).send("gender must be 'M' or 'F'");}else{cov_191txd3x1b().b[0][1]++;}var newacc=(cov_191txd3x1b().s[19]++,new User({userName:req.body.userName,email:req.body.email,password:hashedPass,isPremium:req.body.isPremium,gender:req.body.gender,birthDate:req.body.birthDate}));// console.log('2et3amal');
cov_191txd3x1b().s[20]++;newacc.save().then(doc=>{cov_191txd3x1b().f[1]++;// console.log("skod");
var access=(cov_191txd3x1b().s[21]++,'auth');var code=(cov_191txd3x1b().s[22]++,jwt.sign({_id:newacc._id.toHexString(),access},'secretkeyforuser',{expiresIn:'1d'}));// console.log(code);
var host=(cov_191txd3x1b().s[23]++,req.get('host'));var link=(cov_191txd3x1b().s[24]++,"http://"+req.get('host')+"/users/confirm/"+code);cov_191txd3x1b().s[25]++;console.log(link);var mailOptions=(cov_191txd3x1b().s[26]++,{to:req.body.email,subject:"Please confirm your Email account",html:"Hello,<br> Please Click on the link to verify your email.<br><a href="+link+">Click here to verify</a>"});// console.log(mailOptions);
cov_191txd3x1b().s[27]++;smtpTransport.sendMail(mailOptions,function(error,response){cov_191txd3x1b().f[2]++;cov_191txd3x1b().s[28]++;if(error){cov_191txd3x1b().b[2][0]++;cov_191txd3x1b().s[29]++;console.log(error);cov_191txd3x1b().s[30]++;res.end("error");}else{cov_191txd3x1b().b[2][1]++;cov_191txd3x1b().s[31]++;// console.log("Message sent: " + response.message);
res.end("sent");}});cov_191txd3x1b().s[32]++;res.status(200).send("User added Successfully as inActive. Waiting for Email Confirmation ");},err=>{cov_191txd3x1b().f[3]++;cov_191txd3x1b().s[33]++;console.log(err);cov_191txd3x1b().s[34]++;res.status(409).send("UserName and/or Email already exists ");});}catch{cov_191txd3x1b().s[35]++;res.status(500).send();}});//CONFIRMATION OF USER SIGNUP
/**
 * @api {get} api/users/confirm/:code      SignUp Confrimation
 * @apiName SignUp Confirmed for user
 * @apiGroup Users
 *
 * @apiParam {String} code    user-specific code to activate his account
 *
 * @apiSuccess  (200) User was activated successfully
 * @apiSuccessExample {json} Success-Response:
 *     HTTP/1.1 200 OK
 *     {
 *       "Email confirmed successfully!"
 *     }
 * @apiError (404)  User not found.
 * @apiError (401) Unauthorized. Recieved a corrupted code.
 *
 */cov_191txd3x1b().s[36]++;router.get('/users/confirm/:code',(req,res)=>{cov_191txd3x1b().f[4]++;cov_191txd3x1b().s[37]++;User.ActivateByToken(req.params.code).then(user=>{cov_191txd3x1b().f[5]++;cov_191txd3x1b().s[38]++;if(!user){cov_191txd3x1b().b[3][0]++;cov_191txd3x1b().s[39]++;res.status(404).send("user not found");cov_191txd3x1b().s[40]++;return Promise.reject();}else{cov_191txd3x1b().b[3][1]++;}cov_191txd3x1b().s[41]++;res.status(200).send("Email confirmed successfully!");}).catch(e=>{cov_191txd3x1b().f[6]++;cov_191txd3x1b().s[42]++;res.status(401).send("corrupted code");});});cov_191txd3x1b().s[43]++;router.post('/users/login',async(req,res)=>{cov_191txd3x1b().f[7]++;cov_191txd3x1b().s[44]++;console.log(1);var body=(cov_191txd3x1b().s[45]++,_.pick(req.body,['email','password']));cov_191txd3x1b().s[46]++;console.log(2);cov_191txd3x1b().s[47]++;User.findByCredentials(body.email,body.password).then(user=>{cov_191txd3x1b().f[8]++;cov_191txd3x1b().s[48]++;console.log(3);cov_191txd3x1b().s[49]++;if(user.isActive==true){cov_191txd3x1b().b[4][0]++;cov_191txd3x1b().s[50]++;return user.generateAuthToken().then(token=>{cov_191txd3x1b().f[9]++;cov_191txd3x1b().s[51]++;console.log(4);cov_191txd3x1b().s[52]++;res.header('x-auth',token).send();cov_191txd3x1b().s[53]++;console.log(5);});}else{cov_191txd3x1b().b[4][1]++;cov_191txd3x1b().s[54]++;res.status(403).send("Please go to your inbox and click the link to activate your Email.");}}).catch(e=>{cov_191txd3x1b().f[10]++;cov_191txd3x1b().s[55]++;console.log(e);cov_191txd3x1b().s[56]++;res.status(401).send("Either email or passwrod is incorrect");});//res.send(body)
});// Get User Profile Request
cov_191txd3x1b().s[57]++;router.get('/users/me',(req,res)=>{cov_191txd3x1b().f[11]++;var token=(cov_191txd3x1b().s[58]++,req.header('x-auth'));cov_191txd3x1b().s[59]++;if(!token){cov_191txd3x1b().b[5][0]++;cov_191txd3x1b().s[60]++;res.status(400).send('You should Pass a token to access the profile');}else{cov_191txd3x1b().b[5][1]++;}cov_191txd3x1b().s[61]++;User.findByToken(token).then(user=>{cov_191txd3x1b().f[12]++;cov_191txd3x1b().s[62]++;if(!user){cov_191txd3x1b().b[6][0]++;cov_191txd3x1b().s[63]++;res.status(401).send();}else{cov_191txd3x1b().b[6][1]++;}cov_191txd3x1b().s[64]++;res.status(302).send(user);}).catch(e=>{cov_191txd3x1b().f[13]++;cov_191txd3x1b().s[65]++;res.status(401).send();});});/**
 * forgot password
 * ----------------------
 * @api {post} /users/forgot      Request to send email after forgetting password
 * @apiName ForgotPasswordRequest
 * @apiGroup User privacy
 *
 * @apiParam {string} email       in json form
 * @apiParamExample {json} Request-Example:
 *     {
 *       "email": "abc@abc.com"
 *     }
 *
 * @apiSuccessExample {json} Success-Response:
 *     HTTP/1.1 200 OK
 *     {
 *       "message" :"Email Sent Successfully"
 *     }
 *
 * @apiError  500              [Email Cannot BeSent  A problem while sending email]
  * @apiErrorExample {json} Error-Response:
 *     HTTP/1.1 500 serverError
 *     {
 *       "message":"Sending Failed"
 *     }
* @apiError  404       [email of the user not found ]

 * @apiErrorExample {json} Error-Response:
 *     HTTP/1.1 404 not found
 *     {
 *        "message":"Email not found"
 *     }
 */cov_191txd3x1b().s[66]++;router.post('/users/forgot',async(req,res)=>{cov_191txd3x1b().f[14]++;var reqEmail=(cov_191txd3x1b().s[67]++,req.body.email);//console.log(reqEmail)
cov_191txd3x1b().s[68]++;try{cov_191txd3x1b().s[69]++;await User.findByEmail(reqEmail).then(user=>{cov_191txd3x1b().f[15]++;cov_191txd3x1b().s[70]++;if(!user){cov_191txd3x1b().b[7][0]++;cov_191txd3x1b().s[71]++;return res.status(404).json({"message":"Email not found"});}else{cov_191txd3x1b().b[7][1]++;}// console.log('henaaaa')
var rand=(cov_191txd3x1b().s[72]++,Math.floor(Math.random()*100+54));cov_191txd3x1b().s[73]++;user.generateResetToken().then(token=>{cov_191txd3x1b().f[16]++;//console.log(token);
var host=(cov_191txd3x1b().s[74]++,req.get('host'));var link=(cov_191txd3x1b().s[75]++,"http://"+req.get('host')+"/users/reset/?token= "+token);var mailOptions=(cov_191txd3x1b().s[76]++,{to:reqEmail,subject:"Reset the password ",html:"Hello,<br> Please Click on the link to reset your password.<br><a href="+link+">Click here to verify</a>"});cov_191txd3x1b().s[77]++;console.log(mailOptions);cov_191txd3x1b().s[78]++;smtpTransport.sendMail(mailOptions,function(error,response){cov_191txd3x1b().f[17]++;cov_191txd3x1b().s[79]++;if(error){cov_191txd3x1b().b[8][0]++;cov_191txd3x1b().s[80]++;console.log(error);cov_191txd3x1b().s[81]++;res.status(500).json({"message":"sending failed"});}else{cov_191txd3x1b().b[8][1]++;cov_191txd3x1b().s[82]++;console.log("Message sent: "+response.message);//res.send(token);
cov_191txd3x1b().s[83]++;res.json({"message":"Email Sent Successfully"});}});});});}catch{cov_191txd3x1b().s[84]++;res.status(500).json({"message":"Sending Failed"});}});/**
 * Reset password
 * ----------------------
 * @api {patch} /users/reset      Request to reset password
 * @apiName ResetRequest
 * @apiGroup User privacy
 *
 * @apiParam {string} token          shoulb be passed in query
 * @apiParam {string}  newPassword    should be passed in body in json form
 *
 *
 * @apiSuccessExample {json} Success-Response:
 *     HTTP/1.1 200 OK
 *     {
 *      "message": "Password has been reset successfully""
 *     }
 *
 *
 * @apiErrorExample {json} Error-Response:
 *     HTTP/1.1 401 unauthorized
 *     {
 *       "message": "Reset Failed""
 *     }
 */cov_191txd3x1b().s[85]++;router.patch('/users/reset',async(req,res)=>{cov_191txd3x1b().f[18]++;var newPassword=(cov_191txd3x1b().s[86]++,req.body.newPassword);// console.log(newPassword)
//console.log("helloooooo");
var token=(cov_191txd3x1b().s[87]++,req.query.token);const salt=(cov_191txd3x1b().s[88]++,await bcrypt.genSalt());const hashedPass=(cov_191txd3x1b().s[89]++,await bcrypt.hash(newPassword,salt));cov_191txd3x1b().s[90]++;console.log(hashedPass);cov_191txd3x1b().s[91]++;await User.checkTokenAndFind(token).then(user=>{cov_191txd3x1b().f[19]++;cov_191txd3x1b().s[92]++;user.password=hashedPass;cov_191txd3x1b().s[93]++;user.resetToken=undefined;cov_191txd3x1b().s[94]++;user.save();cov_191txd3x1b().s[95]++;res.json({"message":"Password has been reset successfully"});// console.log(user);
}).catch(e=>{cov_191txd3x1b().f[20]++;cov_191txd3x1b().s[96]++;res.status(401).json({"message":'Reset Failed'});});});//REGULAR ACCOUNT
/**
 * @api {patch} api/users/:id/regular    User wants to unsubscribe from premium features
 * @apiName WithdrawPremiumServies
 * @apiGroup Users
 * @apiHeader {string} x-auth          Only users
 * @apiParam {String} id          the id of the user has to be passed
 *
 * @apiSuccessExample {json} Success-Response:
 *     HTTP/1.1 200 OK
 *     {
 *       "message": "Your account has been changed to regular account"
 *     }

 *
 * @apiError (404)  You are  not premium in the firstplace
 *
 * @apiErrorExample {json} Error-Response:
 *    HTTP/1.1 404
 *     {
 *       "message":"you are not premium , you already have a regular account "
 *     }
 *
 * @apiError (401)  authentication failed
 * @apiErrorExample {json} Error-Response:
 *    HTTP/1.1 401
 *     {
 *       "message":"authentication Failed" "
 *     }
 *
 */cov_191txd3x1b().s[97]++;router.patch('/users/:id/regular',async(req,res)=>{cov_191txd3x1b().f[21]++;var userId;var id=(cov_191txd3x1b().s[98]++,req.params.id);cov_191txd3x1b().s[99]++;console.log(id);var token=(cov_191txd3x1b().s[100]++,req.header('x-auth'));cov_191txd3x1b().s[101]++;User.findByToken(token).then(user=>{cov_191txd3x1b().f[22]++;cov_191txd3x1b().s[102]++;if(!user){cov_191txd3x1b().b[9][0]++;cov_191txd3x1b().s[103]++;return Promise.reject();}else{cov_191txd3x1b().b[9][1]++;}cov_191txd3x1b().s[104]++;userId=user._id;cov_191txd3x1b().s[105]++;console.log(userId);cov_191txd3x1b().s[106]++;if(!(userId.toString()===id)){cov_191txd3x1b().b[10][0]++;cov_191txd3x1b().s[107]++;return res.status(401).json({"message":"authentication Failed"});}else{cov_191txd3x1b().b[10][1]++;cov_191txd3x1b().s[108]++;if(user.isPremium===false){cov_191txd3x1b().b[11][0]++;cov_191txd3x1b().s[109]++;return res.status(404).json({"message":"you are not premium , you already have a regular account"});}else{cov_191txd3x1b().b[11][1]++;cov_191txd3x1b().s[110]++;user.isPremium=false;cov_191txd3x1b().s[111]++;user.save();cov_191txd3x1b().s[112]++;res.status(200).json({"message":"Your account has been changed to regular account"});cov_191txd3x1b().s[113]++;console.log('inside the request');cov_191txd3x1b().s[114]++;console.log(user.isPremium);}}}).catch(e=>{cov_191txd3x1b().f[23]++;cov_191txd3x1b().s[115]++;return res.status(401).json({"message":"authentication Failed"});});});//REQUEST FOR A PREMIUM ACCOUNT
/**
 * @api {get} /users/:id/premium    Send a confirmation mail to be a premium user
 * @apiName Join Premium Request
 * @apiGroup Users
 * @apiHeader {string} x-auth            token Only users can request to premium
 *
 * @apiParam {String} id             the id of the user should be passed in the path
 *
 *
 * @apiSuccessExample {json} Success-Response:
 *     HTTP/1.1 200 OK
 *     {
 *
 *       "message": "confirmation request has been sent, You will be a premium user soon"
 *     }
 * @apiSuccessExample {json} Success-Response:
 *     HTTP/1.1 200 OK
 *     {
 *
 *       "message": "You are already a premium user.Thanks for that"
 *     }
 *
 *
 * @apiError (401)  authentication failed
 * @apiErrorExample {json} Error-Response:
 *    HTTP/1.1 401
 *     {
 *       "message":"authentication Failed" "
 *     }
 *
 * @apiError 500       EmailCannotBeSent  A problem while sending email
 *
 * @apiErrorExample {json} Error-Response:
 *     HTTP/1.1 500 server Error
 *     {
 *       "message":"error,failed to send"
 *     }
 *
 *
*/cov_191txd3x1b().s[116]++;router.get('/users/:id/premium',async(req,res)=>{cov_191txd3x1b().f[24]++;var id=(cov_191txd3x1b().s[117]++,req.params.id);var userId;var token=(cov_191txd3x1b().s[118]++,req.header('x-auth'));cov_191txd3x1b().s[119]++;User.findByToken(token).then(user=>{cov_191txd3x1b().f[25]++;cov_191txd3x1b().s[120]++;if(!user){cov_191txd3x1b().b[12][0]++;cov_191txd3x1b().s[121]++;return Promise.reject();}else{cov_191txd3x1b().b[12][1]++;}cov_191txd3x1b().s[122]++;userId=user._id;cov_191txd3x1b().s[123]++;console.log(userId);cov_191txd3x1b().s[124]++;if(!(userId.toString()===id)){cov_191txd3x1b().b[13][0]++;cov_191txd3x1b().s[125]++;return res.status(401).json({"message":"authentication Failed"});}else{cov_191txd3x1b().b[13][1]++;cov_191txd3x1b().s[126]++;if(user.isPremium===true){cov_191txd3x1b().b[14][0]++;cov_191txd3x1b().s[127]++;return res.status(200).json({"message":"you are already a premium user, thanks for that"});}else{cov_191txd3x1b().b[14][1]++;var email=(cov_191txd3x1b().s[128]++,user.email);var type=(cov_191txd3x1b().s[129]++,'premium');var code=(cov_191txd3x1b().s[130]++,jwt.sign({_id:user._id,type},'secretkeyforuser',{expiresIn:'1d'}));cov_191txd3x1b().s[131]++;console.log(code);var host=(cov_191txd3x1b().s[132]++,req.get('host'));var link=(cov_191txd3x1b().s[133]++,"http://"+req.get('host')+"/users/confirmPremium/?token= "+code);cov_191txd3x1b().s[134]++;console.log(link);var mailOptions=(cov_191txd3x1b().s[135]++,{to:email,subject:"Please confirm your Premium account",html:"Hello,<br> Please Click on the link to confirm your premium account.<br><a href="+link+">Click here to verify</a>"});cov_191txd3x1b().s[136]++;console.log(mailOptions);cov_191txd3x1b().s[137]++;smtpTransport.sendMail(mailOptions,function(error,response){cov_191txd3x1b().f[26]++;cov_191txd3x1b().s[138]++;if(error){cov_191txd3x1b().b[15][0]++;cov_191txd3x1b().s[139]++;console.log(error);cov_191txd3x1b().s[140]++;res.status(500).json({"message":"error,failed to send"});}else{cov_191txd3x1b().b[15][1]++;cov_191txd3x1b().s[141]++;console.log("Message sent: "+response.message);cov_191txd3x1b().s[142]++;res.status(200).json({"message":"confirmation request has been sent, You will be a premium user soon"});}});}}}).catch(e=>{cov_191txd3x1b().f[27]++;cov_191txd3x1b().s[143]++;return res.status(401).json({"message":"authentication Failed"});});});//CONFIRMATION OF A PREMIUM ACCOUNT
/**
 * @api {patch} /users/confirmPremium     User is confirmed to be a premium user
 * @apiName Acceptance of Premium Request
 * @apiGroup Users
 * @apiParam {String} token               the token that was sent in the link snet to the user's email
 *
 * @apiSuccessExample {json} Success-Response:
 *     HTTP/1.1 200 OK
 *     {
*           "message" : "Email confirmed successfully,Welcome To Premium Life!"
 *
 *
 *
 *     }
 *
 * @apiError 401  authentication failed
 * @apiErrorExample {json} Error-Response:
 *    HTTP/1.1 401
 *     {
 *       "message":"authentication Failed" "
 *     }
 *

 *
 *
 *
 *
 *
 */cov_191txd3x1b().s[144]++;router.patch('/users/confirmPremium/',async(req,res)=>{cov_191txd3x1b().f[28]++;var token=(cov_191txd3x1b().s[145]++,req.query.token);cov_191txd3x1b().s[146]++;try{cov_191txd3x1b().s[147]++;decoded=jwt.verify(token,'secretkeyforuser');cov_191txd3x1b().s[148]++;if(decoded.type==='premium'){cov_191txd3x1b().b[16][0]++;cov_191txd3x1b().s[149]++;User.findById(decoded._id).then(user=>{cov_191txd3x1b().f[29]++;cov_191txd3x1b().s[150]++;if(!user){cov_191txd3x1b().b[17][0]++;cov_191txd3x1b().s[151]++;return res.status(404).json({"message":"not found"});// return Promise.reject();
}else{cov_191txd3x1b().b[17][1]++;}cov_191txd3x1b().s[152]++;user.isPremium=true;cov_191txd3x1b().s[153]++;user.save();cov_191txd3x1b().s[154]++;res.status(200).json({"message":"Email confirmed successfully,Welcome To Premium Life!"});}).catch(e=>{cov_191txd3x1b().f[30]++;cov_191txd3x1b().s[155]++;return res.status(401).json({"message":"authentication failed"});});}else{cov_191txd3x1b().b[16][1]++;}}catch{cov_191txd3x1b().s[156]++;res.status(401).json({"message":"authentication failed or invalid token"});}});//GET ARTIST RELATED ARTISTS
cov_191txd3x1b().s[157]++;router.get('/users/artists/related',(req,res)=>{cov_191txd3x1b().f[31]++;var token=(cov_191txd3x1b().s[158]++,req.header('x-auth'));cov_191txd3x1b().s[159]++;User.findByToken(token).then(user=>{cov_191txd3x1b().f[32]++;cov_191txd3x1b().s[160]++;if(!user){cov_191txd3x1b().b[18][0]++;cov_191txd3x1b().s[161]++;return Promise.reject();}else{cov_191txd3x1b().b[18][1]++;}var sentId=(cov_191txd3x1b().s[162]++,req.body.artistId);cov_191txd3x1b().s[163]++;if(!sentId){cov_191txd3x1b().b[19][0]++;cov_191txd3x1b().s[164]++;return res.status(400).send("Send the artist ID");}else{cov_191txd3x1b().b[19][1]++;}cov_191txd3x1b().s[165]++;if(!ObjectID.isValid(sentId)){cov_191txd3x1b().b[20][0]++;cov_191txd3x1b().s[166]++;return res.status(404).send("Invalid Id");}else{cov_191txd3x1b().b[20][1]++;}cov_191txd3x1b().s[167]++;artist.findById(sentId).then(myartists=>{cov_191txd3x1b().f[33]++;cov_191txd3x1b().s[168]++;if(!myartists){cov_191txd3x1b().b[21][0]++;cov_191txd3x1b().s[169]++;return res.status(404).send('Id not found');}else{cov_191txd3x1b().b[21][1]++;}cov_191txd3x1b().s[170]++;artist.find({genres:{$in:myartists.genres}}).then(suggestedArtists=>{cov_191txd3x1b().f[34]++;cov_191txd3x1b().s[171]++;for(var count=(cov_191txd3x1b().s[172]++,0);count<suggestedArtists.length;count++){cov_191txd3x1b().s[173]++;if(suggestedArtists[count]._id==sentId){cov_191txd3x1b().b[22][0]++;var switchvar=(cov_191txd3x1b().s[174]++,suggestedArtists[count]);cov_191txd3x1b().s[175]++;suggestedArtists[count]=suggestedArtists[suggestedArtists.length-1];cov_191txd3x1b().s[176]++;suggestedArtists[suggestedArtists.length-1]=switchvar;cov_191txd3x1b().s[177]++;suggestedArtists.pop();cov_191txd3x1b().s[178]++;break;}else{cov_191txd3x1b().b[22][1]++;}}cov_191txd3x1b().s[179]++;res.status(302).send(suggestedArtists);},e=>{cov_191txd3x1b().f[35]++;cov_191txd3x1b().s[180]++;res.status(500).send("Internal Server error");});},e=>{cov_191txd3x1b().f[36]++;cov_191txd3x1b().s[181]++;res.status(500).send("Internal server error");});}).catch(e=>{cov_191txd3x1b().f[37]++;cov_191txd3x1b().s[182]++;res.status(401).send('Unauthorized Access');});});cov_191txd3x1b().s[183]++;router.patch('/users/me/editprofile',(req,res)=>{cov_191txd3x1b().f[38]++;var token=(cov_191txd3x1b().s[184]++,req.header('x-auth'));cov_191txd3x1b().s[185]++;if(!token){cov_191txd3x1b().b[23][0]++;cov_191txd3x1b().s[186]++;return res.status(401).send('You should Pass a token to access the profile');}else{cov_191txd3x1b().b[23][1]++;cov_191txd3x1b().s[187]++;try{cov_191txd3x1b().s[188]++;decoded=jwt.verify(token,'secretkeyforuser');cov_191txd3x1b().s[189]++;User.findById(decoded._id).then(user=>{cov_191txd3x1b().f[39]++;cov_191txd3x1b().s[190]++;if(!user){cov_191txd3x1b().b[24][0]++;cov_191txd3x1b().s[191]++;return res.status(404).json({"message":"not found"});}else{cov_191txd3x1b().b[24][1]++;}cov_191txd3x1b().s[192]++;if(req.body.birthDate){cov_191txd3x1b().b[25][0]++;var timestamp=(cov_191txd3x1b().s[193]++,Date.parse(req.body.birthDate));cov_191txd3x1b().s[194]++;if(isNaN(timestamp)==false){cov_191txd3x1b().b[26][0]++;var correctDate=(cov_191txd3x1b().s[195]++,new Date(timestamp));}else{cov_191txd3x1b().b[26][1]++;cov_191txd3x1b().s[196]++;return res.status(400).send("invalid date format. use yyyy-mm-dd");}}else{cov_191txd3x1b().b[25][1]++;}cov_191txd3x1b().s[197]++;if(req.body.userName){cov_191txd3x1b().b[27][0]++;cov_191txd3x1b().s[198]++;User.findOne({userName:req.body.userName}).then(duplicate=>{cov_191txd3x1b().f[40]++;cov_191txd3x1b().s[199]++;if((cov_191txd3x1b().b[29][0]++,duplicate)&&(cov_191txd3x1b().b[29][1]++,duplicate._id!=decoded._id)){cov_191txd3x1b().b[28][0]++;cov_191txd3x1b().s[200]++;return res.status(403).send("UserName already exists");}else{cov_191txd3x1b().b[28][1]++;cov_191txd3x1b().s[201]++;try{cov_191txd3x1b().s[202]++;if(req.body.userName){cov_191txd3x1b().b[30][0]++;cov_191txd3x1b().s[203]++;user.userName=req.body.userName;}else{cov_191txd3x1b().b[30][1]++;}cov_191txd3x1b().s[204]++;if(req.body.gender){cov_191txd3x1b().b[31][0]++;cov_191txd3x1b().s[205]++;if((cov_191txd3x1b().b[33][0]++,req.body.gender.toString()!="M")&&(cov_191txd3x1b().b[33][1]++,req.body.gender.toString()!="F")){cov_191txd3x1b().b[32][0]++;cov_191txd3x1b().s[206]++;return res.status(400).send("gender must be 'M' or 'F'");}else{cov_191txd3x1b().b[32][1]++;}cov_191txd3x1b().s[207]++;user.gender=req.body.gender;}else{cov_191txd3x1b().b[31][1]++;}cov_191txd3x1b().s[208]++;if(req.body.birthDate){cov_191txd3x1b().b[34][0]++;cov_191txd3x1b().s[209]++;user.birthDate=correctDate;}else{cov_191txd3x1b().b[34][1]++;}cov_191txd3x1b().s[210]++;user.save(function(err,user){cov_191txd3x1b().f[41]++;cov_191txd3x1b().s[211]++;if(err){cov_191txd3x1b().b[35][0]++;cov_191txd3x1b().s[212]++;return res.send("invalid userName");}else{cov_191txd3x1b().b[35][1]++;}});}catch(e){cov_191txd3x1b().s[213]++;return res.status(400).send(e);}cov_191txd3x1b().s[214]++;return res.status(200).send("updated");}});}else{cov_191txd3x1b().b[27][1]++;}}).catch(e=>{cov_191txd3x1b().f[42]++;cov_191txd3x1b().s[215]++;return res.status(401).send("authentication failed");});}catch{cov_191txd3x1b().s[216]++;return res.status(401).json({"message":"authentication failed or invalid token"});}}});// Change Password
cov_191txd3x1b().s[217]++;router.put('/users/changePassword',async(req,res)=>{cov_191txd3x1b().f[43]++;var oldPassword=(cov_191txd3x1b().s[218]++,req.body.oldPassword);var newPassword=(cov_191txd3x1b().s[219]++,req.body.newPassword);var token=(cov_191txd3x1b().s[220]++,req.header('x-auth'));cov_191txd3x1b().s[221]++;if(!token){cov_191txd3x1b().b[36][0]++;cov_191txd3x1b().s[222]++;res.status(400).send('You did not pass a token');}else{cov_191txd3x1b().b[36][1]++;}cov_191txd3x1b().s[223]++;User.findByToken(token).then(user=>{cov_191txd3x1b().f[44]++;cov_191txd3x1b().s[224]++;if(!user){cov_191txd3x1b().b[37][0]++;cov_191txd3x1b().s[225]++;res.status(404).send();}else{cov_191txd3x1b().b[37][1]++;}cov_191txd3x1b().s[226]++;console.log("you are my user");cov_191txd3x1b().s[227]++;bcrypt.compare(oldPassword,user.password,async(err,res2)=>{cov_191txd3x1b().f[45]++;cov_191txd3x1b().s[228]++;if(res2){cov_191txd3x1b().b[38][0]++;cov_191txd3x1b().s[229]++;console.log('Your password mached with database hash password');cov_191txd3x1b().s[230]++;console.log('lets change password');const salt=(cov_191txd3x1b().s[231]++,await bcrypt.genSalt());const hashedPass=(cov_191txd3x1b().s[232]++,await bcrypt.hash(newPassword,salt));cov_191txd3x1b().s[233]++;console.log(hashedPass);cov_191txd3x1b().s[234]++;user.password=hashedPass;cov_191txd3x1b().s[235]++;user.save();cov_191txd3x1b().s[236]++;res.status(200).send("Password has been reset successfully");}else{cov_191txd3x1b().b[38][1]++;cov_191txd3x1b().s[237]++;console.log(user.password);cov_191txd3x1b().s[238]++;console.log('Your password not mached.');cov_191txd3x1b().s[239]++;res.status(403).send("this is not the correct password");};}).catch(e=>{cov_191txd3x1b().f[46]++;cov_191txd3x1b().s[240]++;res.status(500).send();});}).catch(e=>{cov_191txd3x1b().f[47]++;cov_191txd3x1b().s[241]++;res.status(401).send();});});//if(!module.parent){
//  app.listen(3000,()=>{
//      console.log("Started on port 3000");
//  });
//}
cov_191txd3x1b().s[242]++;module.exports=router;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,